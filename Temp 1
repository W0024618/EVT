C:\projects\yolo_project\camera_files\Camera-door_details-updated.xlsx



/* camera_registry.sql
   Run this in SSMS (connected to the target database) once to create table.
*/
IF OBJECT_ID('dbo.cameras', 'U') IS NOT NULL
  DROP TABLE dbo.cameras;
GO

CREATE TABLE dbo.cameras (
  camera_id NVARCHAR(128) PRIMARY KEY,
  camera_name NVARCHAR(256),
  camera_type NVARCHAR(64),
  ip_address NVARCHAR(128),
  rtsp_url NVARCHAR(1024),
  username NVARCHAR(128),
  password NVARCHAR(256),
  door_id NVARCHAR(128),
  location NVARCHAR(256),
  coverage_zone NVARCHAR(64),
  resolution NVARCHAR(32),
  fps FLOAT,
  preferred BIT,
  notes NVARCHAR(MAX),
  created_at DATETIME2 DEFAULT SYSUTCDATETIME()
);
GO






# import_cameras.py
# Usage:
# 1) set environment vars: DB_SERVER, DB_NAME, DB_USER, DB_PASS
# 2) activate your venv with pyodbc installed
# 3) python import_cameras.py --excel "Camera-door_details-updated.xlsx"
import os, argparse, pandas as pd, pyodbc

def select_driver():
    drivers = [d for d in pyodbc.drivers() if d and 'ODBC Driver' in d]
    if not drivers:
        raise RuntimeError('No ODBC Driver found. Install "ODBC Driver 18 for SQL Server" or "ODBC Driver 17".')
    return drivers[-1]

def get_conn():
    server = os.environ.get('DB_SERVER')
    database = os.environ.get('DB_NAME')
    user = os.environ.get('DB_USER')
    password = os.environ.get('DB_PASS')
    if not all([server,database,user,password]):
        raise RuntimeError('Set DB_SERVER, DB_NAME, DB_USER, DB_PASS environment variables before running.')
    driver = select_driver()
    conn_str = f"DRIVER={{{driver}}};SERVER={server};DATABASE={database};UID={user};PWD={password};Encrypt=yes;TrustServerCertificate=yes;"
    return pyodbc.connect(conn_str, timeout=30)

def normalize_pref(v):
    s = str(v).strip().lower()
    if s in ('yes','true','1'): return 1
    if s in ('no','false','0'): return 0
    return None

def main(excel_path):
    df = pd.read_excel(excel_path, sheet_name='Cameras', dtype=str).fillna('')
    conn = get_conn()
    cur = conn.cursor()
    sql = """INSERT INTO dbo.cameras
      (camera_id,camera_name,camera_type,ip_address,rtsp_url,username,password,door_id,location,coverage_zone,resolution,fps,preferred,notes)
      VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)"""
    for _, r in df.iterrows():
        fps_raw = r.get('fps','').strip()
        fps_val = float(fps_raw) if fps_raw!='' else None
        pref_val = normalize_pref(r.get('preferred',''))
        params = (
            str(r.get('camera_id','')).strip(),
            str(r.get('camera_name','')).strip(),
            str(r.get('camera_type','')).strip(),
            str(r.get('ip_address','')).strip(),
            str(r.get('rtsp_url','')).strip(),
            str(r.get('username','')).strip(),
            str(r.get('password','')).strip(),
            str(r.get('door_id','')).strip(),
            str(r.get('location','')).strip(),
            str(r.get('coverage_zone','')).strip(),
            str(r.get('resolution','')).strip(),
            fps_val,
            pref_val,
            str(r.get('notes','')).strip()
        )
        cur.execute(sql, params)
    conn.commit()
    cur.close()
    conn.close()
    print("Import complete.")

if __name__ == "__main__":
    ap = argparse.ArgumentParser()
    ap.add_argument('--excel', default='Camera-door_details-updated.xlsx')
    args = ap.parse_args()
    main(args.excel)






cd C:\projects\yolo_project\camera_files
# activate your project .venv
.\.venv\Scripts\Activate.ps1
# set DB env vars (example)
$env:DB_SERVER = "SRVWUPNQ0986V"    # choose appropriate server from your region
$env:DB_NAME   = "ACVSUJournal_00010030"
$env:DB_USER   = "GSOC_Test"
$env:DB_PASS   = "Westernccure@2025"
# then run
pip install pyodbc pandas openpyxl
python import_cameras.py --excel "Camera-door_details-updated.xlsx"








