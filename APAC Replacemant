      // ── Pune special handling ──
      // if (p === 'Pune') {
      //   // For Pune we keep additional OutDirection/Outer Area protection:
      //   // (we already filtered any exact "Out of office" above)
      //   if (r.Direction === 'OutDirection' && !zoneRaw.endsWith('Outer Area')) {
      //     return;
      //   }

if (r.Direction === 'OutDirection') {
  // allow certain valid OutDirection zones (Assembly Area, Reception Area, ...)
  const allowedOutZones = new Set(['Assembly Area', 'Reception Area']);
  if (!zoneRaw.endsWith('Outer Area') && !allowedOutZones.has(zoneRaw)) {
    return;
  }





  "APAC_IN_PUN_PODIUM_ST4 DOOR 2 (GREEN)___OutDirection":                                "Green Zone",



   "APAC_IN_PUN_TOWER B_MOBILE LAB___InDirection":    "Tower B",
   "APAC_IN_PUN_TOWER B_MOBILE LAB___OutDirection":    "Tower B",
  "APAC_IN_PUN_TOWER B_CEC DOOR___InDirection":           "Tower B",
  "APAC_IN_PUN_TOWER B_CEC DOOR___OutDirection":          "Tower B",




if (Direction === 'OutDirection') {
  // Compare lowercased zone safely
  const zoneLower = String(zone).toLowerCase();

  // Only full eviction when it's the real "Out of office"
  if (zoneLower === 'out of office') {
    uniquePeople.delete(dedupKey);
    delete current[dedupKey];
  } else {
    // Keep the person in current headcount for all other OutDirection cases
    // Update their last-seen metadata (zone, door, Direction)
    uniquePeople.set(dedupKey, PersonnelType);
    current[dedupKey] = {
      Dateonly, Swipe_Time,
      EmployeeID, ObjectName1, CardNumber,
      PersonnelType,
      zone: zoneRaw,
      door: Door,
      Direction
    };
  }
  continue;
}


// if (Direction === 'OutDirection') {
//   // true Out-of-office → full eviction (already checked earlier too)
//   if (zone === 'out of office') {
//     uniquePeople.delete(dedupKey);
//     delete current[dedupKey];
//     continue;
//   }

//   // Allowlist of OutDirection zones that should be kept (not evicted).
//   // Add any other special OutDirection zones here as they are discovered.
//   const allowedOutZones = new Set([
//     'Assembly Area',
//     'Reception Area'
//   ]);

//   // Preserve if it's an "Outer Area" OR explicitly allowed OutDirection zone.
//   if (zoneRaw.endsWith('Outer Area') || allowedOutZones.has(zoneRaw)) {
//     uniquePeople.set(dedupKey, PersonnelType);
//     current[dedupKey] = {
//       Dateonly, Swipe_Time,
//       EmployeeID, ObjectName1, CardNumber,
//       PersonnelType,
//       zone: zoneRaw,
//       door: Door,
//       Direction
//     };
//   } else {
//     // Any other OutDirection (TURNSTILE, lobby exits, etc.) = full eviction
//     if (!warnedKeys.has(`EVICTED_OUT|${normalizePersonName(ObjectName1)}|${zoneRaw}`)) {
//       console.log(`ℹ️ Evicting OutDirection for ${normalizePersonName(ObjectName1)} at zone ${zoneRaw}`);
//       warnedKeys.add(`EVICTED_OUT|${normalizePersonName(ObjectName1)}|${zoneRaw}`);
//     }
//     uniquePeople.delete(dedupKey);
//     delete current[dedupKey];
//   }
//   continue;
// }

