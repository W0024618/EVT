USE [ACVSUJournal_00010021];
GO

SET NOCOUNT ON;

;WITH EmpAgg AS (
    SELECT
      AP.ObjectID           AS EmployeeObjID,
      AP.Name               AS EmpName,
      CASE WHEN AP.Int1 = 0 OR AP.Int1 IS NULL
           THEN AP.Text12
           ELSE CAST(AP.Int1 AS NVARCHAR(50))
      END AS EmployeeID,
      ISNULL(PT.Name, '')   AS PersonnelType,
      AP.Disabled           AS Profile_Disabled,

      COUNT(ACR.Name)       AS Profile_Cards,

      -- number of active cards
      SUM(
        CASE
          WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
            AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
            AND (ACR.Lost IS NULL OR ACR.Lost = 0)
            AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
          THEN 1 ELSE 0
        END
      ) AS Active_Cards,

      -- deactive = total - active (guard to never go negative)
      CASE
        WHEN COUNT(ACR.Name) - SUM(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN 1 ELSE 0
          END
        ) < 0 THEN 0
        ELSE COUNT(ACR.Name) - SUM(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN 1 ELSE 0
          END
        )
      END AS Deactive_Cards,

      -- Active card numbers (comma-separated). Replace COALESCE(...) with your card column if you have one.
      ISNULL(
        STRING_AGG(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN COALESCE(ACR.Number, ACR.CardNumber, ACR.Code, CAST(ACR.ObjectID AS NVARCHAR(50)))
            ELSE NULL
          END
        , ', ') WITHIN GROUP (ORDER BY ACR.ObjectID)
      , '') AS Active_Card_Numbers,

      -- Deactive card numbers (comma-separated)
      ISNULL(
        STRING_AGG(
          CASE
            WHEN NOT (
                   (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
               AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
               AND (ACR.Lost IS NULL OR ACR.Lost = 0)
               AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            )
            THEN COALESCE(ACR.Number, ACR.CardNumber, ACR.Code, CAST(ACR.ObjectID AS NVARCHAR(50)))
            ELSE NULL
          END
        , ', ') WITHIN GROUP (ORDER BY ACR.ObjectID)
      , '') AS Deactive_Card_Numbers

    FROM ACVSCore.Access.Personnel AP
    LEFT JOIN ACVSCore.Access.Credential ACR
      ON AP.Name = ACR.Name
    LEFT JOIN ACVSCore.Access.PersonnelType PT
      ON PT.ObjectID = AP.PersonnelTypeID
    GROUP BY
      AP.ObjectID,
      AP.Name,
      AP.Int1,
      AP.Text12,
      PT.Name,
      AP.Disabled
),
EmpAggWithStatus AS (
    SELECT
      EmployeeObjID,
      EmpName,
      EmployeeID,
      PersonnelType,
      Profile_Disabled,
      Profile_Cards,
      Active_Cards,
      Deactive_Cards,
      Active_Card_Numbers,
      Deactive_Card_Numbers,
      CASE
        WHEN Profile_Disabled = 1 THEN 'Deactive'
        WHEN Profile_Disabled = 0 AND Active_Cards > 0 THEN 'Active'
        ELSE 'Deactive'
      END AS Employee_Status
    FROM EmpAgg
)

/* Final statement that consumes the CTE - columns and order per your request */
SELECT
  EmployeeObjID,
  EmpName,
  EmployeeID,
  PersonnelType,
  Active_Cards,
  Active_Card_Numbers    AS [Active card number],
  Deactive_Cards,
  Deactive_Card_Numbers  AS [Deactive card number],
  Employee_Status
FROM EmpAggWithStatus
ORDER BY EmpName;
GO

















Query got this error 
Msg 195, Level 15, State 10, Line 57
'STRING_AGG' is not a recognized built-in function name.

Completion time: 2025-10-07T16:15:57.1719757+05:30

Fix this error carefully


USE [ACVSUJournal_00010021];
GO

SET NOCOUNT ON;

;WITH EmpAgg AS (
    SELECT
      AP.ObjectID           AS EmployeeObjID,
      AP.Name               AS EmpName,
      CASE WHEN AP.Int1 = 0 OR AP.Int1 IS NULL
           THEN AP.Text12
           ELSE CAST(AP.Int1 AS NVARCHAR(50))
      END AS EmployeeID,
      ISNULL(PT.Name, '')   AS PersonnelType,
      AP.Text10             AS Manager_Name,
      AP.Int4               AS Manager_WU_ID,
      AP.Disabled           AS Profile_Disabled,

      -- total number of credential rows for the employee
      COUNT(ACR.Name)       AS Profile_Cards,

      -- number of cards meeting the "active" criteria
      SUM(
        CASE
          WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
            AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
            AND (ACR.Lost IS NULL OR ACR.Lost = 0)
            AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
          THEN 1 ELSE 0
        END
      ) AS Active_Cards,

      -- deactive = total - active (guard to never go negative)
      CASE
        WHEN COUNT(ACR.Name) - SUM(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN 1 ELSE 0
          END
        ) < 0 THEN 0
        ELSE COUNT(ACR.Name) - SUM(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN 1 ELSE 0
          END
        )
      END AS Deactive_Cards,

      -- Active card numbers (comma-separated). Adjust COALESCE(...) if your card column differs.
      ISNULL(
        STRING_AGG(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN COALESCE(ACR.Number, ACR.CardNumber, ACR.Code, CAST(ACR.ObjectID AS NVARCHAR(50)))
            ELSE NULL
          END
        , ', ')
      , '') AS Active_Card_Numbers,

      -- Deactive card numbers (comma-separated)
      ISNULL(
        STRING_AGG(
          CASE
            WHEN NOT (
                   (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
               AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
               AND (ACR.Lost IS NULL OR ACR.Lost = 0)
               AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            )
            THEN COALESCE(ACR.Number, ACR.CardNumber, ACR.Code, CAST(ACR.ObjectID AS NVARCHAR(50)))
            ELSE NULL
          END
        , ', ')
      , '') AS Deactive_Card_Numbers

    FROM ACVSCore.Access.Personnel AP
    LEFT JOIN ACVSCore.Access.Credential ACR
      ON AP.Name = ACR.Name
    LEFT JOIN ACVSCore.Access.PersonnelType PT
      ON PT.ObjectID = AP.PersonnelTypeID
    GROUP BY
      AP.ObjectID,
      AP.Name,
      AP.Int1,
      AP.Text12,
      PT.Name,
      AP.Text10,
      AP.Int4,
      AP.Disabled
),
EmpAggWithStatus AS (
    SELECT
      EmployeeObjID,
      EmpName,
      EmployeeID,
      PersonnelType,
      Manager_Name,
      Manager_WU_ID,
      Profile_Disabled,
      Profile_Cards,
      Active_Cards,
      Deactive_Cards,
      Active_Card_Numbers,
      Deactive_Card_Numbers,
      CASE
        WHEN Profile_Disabled = 1 THEN 'Deactive'
        WHEN Profile_Disabled = 0 AND Active_Cards > 0 THEN 'Active'
        ELSE 'Deactive'
      END AS Employee_Status
    FROM EmpAgg
)

/* Final statement that consumes the CTE - selecting the exact columns you requested */
SELECT
  EmployeeObjID,
  EmpName,
  EmployeeID,
  PersonnelType,
  Active_Cards,
  Active_Card_Numbers    AS [Active card number],
  Deactive_Cards,
  Deactive_Card_Numbers  AS [Deactive card number],
  Employee_Status
FROM EmpAggWithStatus
ORDER BY EmpName;
GO

