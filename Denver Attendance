USE [ACVSUJournal_00010021];
GO

SET NOCOUNT ON;

;WITH EmpAgg AS (
    SELECT
      AP.ObjectID           AS EmployeeObjID,
      AP.Name               AS EmpName,
      -- if Int1 is 0 or NULL use Text12, otherwise use the Int1 numeric value as text
      CASE WHEN AP.Int1 = 0 OR AP.Int1 IS NULL
           THEN AP.Text12
           ELSE CAST(AP.Int1 AS NVARCHAR(50))
      END AS EmployeeID,
      ISNULL(PT.Name, '')   AS PersonnelType,
      AP.Text10             AS Manager_Name,
      AP.Int4               AS Manager_WU_ID,
      AP.Disabled           AS Profile_Disabled,

      -- total number of credential rows for the employee
      COUNT(ACR.Name)       AS Profile_Cards,

      -- number of cards meeting the "active" criteria
      SUM(
        CASE
          WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
            AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
            AND (ACR.Lost IS NULL OR ACR.Lost = 0)
            AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
          THEN 1 ELSE 0
        END
      ) AS Active_Cards,

      -- deactive = total - active, guard to never go negative
      CASE
        WHEN COUNT(ACR.Name) - SUM(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN 1 ELSE 0
          END
        ) < 0 THEN 0
        ELSE COUNT(ACR.Name) - SUM(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN 1 ELSE 0
          END
        )
      END AS Deactive_Cards

    FROM ACVSCore.Access.Personnel AP
    LEFT JOIN ACVSCore.Access.Credential ACR
      ON AP.Name = ACR.Name
    LEFT JOIN ACVSCore.Access.PersonnelType PT
      ON PT.ObjectID = AP.PersonnelTypeID
    GROUP BY
      AP.ObjectID,
      AP.Name,
      AP.Int1,
      AP.Text12,
      PT.Name,
      AP.Text10,
      AP.Int4,
      AP.Disabled
),
EmpAggWithStatus AS (
    SELECT
      EmployeeObjID,
      EmpName,
      EmployeeID,
      PersonnelType,
      Manager_Name,
      Manager_WU_ID,
      Profile_Disabled,
      Profile_Cards,
      Active_Cards,
      Deactive_Cards,
      CASE
        WHEN Profile_Disabled = 1 THEN 'Deactive'
        WHEN Profile_Disabled = 0 AND Active_Cards > 0 THEN 'Active'
        ELSE 'Deactive'
      END AS Employee_Status
    FROM EmpAgg
)

/* Final statement that consumes the CTE */
SELECT
  EmployeeObjID,
  EmpName,
  EmployeeID,
  PersonnelType,
  Manager_Name,
  Manager_WU_ID,
  Profile_Disabled,
  Profile_Cards,
  Active_Cards,
  Deactive_Cards,
  Employee_Status
FROM EmpAggWithStatus
ORDER BY EmpName;
GO









USE [ACVSUJournal_00010021];
GO

SET NOCOUNT ON;

;WITH EmpAgg AS (
    SELECT
      AP.ObjectID           AS EmployeeObjID,
      AP.Name               AS EmpName,
      -- if Int1 is 0 or NULL use Text12, otherwise use the Int1 numeric value as text
      CASE WHEN AP.Int1 = 0 OR AP.Int1 IS NULL
           THEN AP.Text12
           ELSE CAST(AP.Int1 AS NVARCHAR(50))
      END AS EmployeeID,
      ISNULL(PT.Name, '')   AS PersonnelType,
      AP.Text10             AS Manager_Name,
      AP.Int4               AS Manager_WU_ID,
      AP.Disabled           AS Profile_Disabled,

      -- total number of credential rows for the employee
      COUNT(ACR.Name)       AS Profile_Cards,

      -- number of cards meeting the "active" criteria
      SUM(
        CASE
          WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
            AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
            AND (ACR.Lost IS NULL OR ACR.Lost = 0)
            AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
          THEN 1 ELSE 0
        END
      ) AS Active_Cards,

      -- deactive = total - active, guard to never go negative
      CASE
        WHEN COUNT(ACR.Name) - SUM(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN 1 ELSE 0
          END
        ) < 0 THEN 0
        ELSE COUNT(ACR.Name) - SUM(
          CASE
            WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
              AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
              AND (ACR.Lost IS NULL OR ACR.Lost = 0)
              AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
            THEN 1 ELSE 0
          END
        )
      END AS Deactive_Cards

    FROM ACVSCore.Access.Personnel AP
    LEFT JOIN ACVSCore.Access.Credential ACR
      ON AP.Name = ACR.Name
    LEFT JOIN ACVSCore.Access.PersonnelType PT
      ON PT.ObjectID = AP.PersonnelTypeID
    GROUP BY
      AP.ObjectID,
      AP.Name,
      AP.Int1,
      AP.Text12,
      PT.Name,
      AP.Text10,
      AP.Int4,
      AP.Disabled
),
EmpAggWithStatus AS (
    SELECT
      EmployeeObjID,
      EmpName,
      EmployeeID,
      PersonnelType,
      Manager_Name,
      Manager_WU_ID,
      Profile_Disabled,
      Profile_Cards,
      Active_Cards,
      Deactive_Cards,
      CASE
        WHEN Profile_Disabled = 1 THEN 'Deactive'
        WHEN Profile_Disabled = 0 AND Active_Cards > 0 THEN 'Active'
        ELSE 'Deactive'
      END AS Employee_Status
    FROM EmpAgg
)

/* Final statement that consumes the CTE */
SELECT
  EmployeeObjID,
  EmpName,
  EmployeeID,
  PersonnelType,
  Manager_Name,
  Manager_WU_ID,
  Profile_Disabled,
  Profile_Cards,
  Active_Cards,
  Deactive_Cards,
  Employee_Status
FROM EmpAggWithStatus
ORDER BY EmpName;
GO



















USE [ACVSUJournal_00010021];
GO

SET NOCOUNT ON;

;WITH EmpAgg AS (
    SELECT
      AP.ObjectID           AS EmployeeObjID,
      AP.Name               AS EmpName,
      -- if Int1 is 0 or NULL use Text12, otherwise use the Int1 numeric value as text
      CASE WHEN AP.Int1 = 0 OR AP.Int1 IS NULL
           THEN AP.Text12
           ELSE CAST(AP.Int1 AS NVARCHAR(50))
      END AS EmployeeID,
      ISNULL(PT.Name, '')   AS PersonnelType,
      AP.Text10             AS Manager_Name,
      AP.Int4               AS Manager_WU_ID,
      AP.Disabled           AS Profile_Disabled,
      COUNT(ACR.Name)       AS Total_Cards,
      SUM(
        CASE
          WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
            AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
            AND (ACR.Lost IS NULL OR ACR.Lost = 0)
            AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
          THEN 1 ELSE 0
        END
      ) AS Active_Cards
    FROM ACVSCore.Access.Personnel AP
    LEFT JOIN ACVSCore.Access.Credential ACR
      ON AP.Name = ACR.Name
    LEFT JOIN ACVSCore.Access.PersonnelType PT
      ON PT.ObjectID = AP.PersonnelTypeID
    GROUP BY
      AP.ObjectID,
      AP.Name,
      AP.Int1,
      AP.Text12,
      PT.Name,
      AP.Text10,
      AP.Int4,
      AP.Disabled
),
EmpAggWithStatus AS (
    SELECT
      EmployeeObjID,
      EmpName,
      EmployeeID,
      PersonnelType,
      Manager_Name,
      Manager_WU_ID,
      Profile_Disabled,
      Total_Cards,
      Active_Cards,
      CASE
        WHEN Profile_Disabled = 1 THEN 'Deactive'
        WHEN Profile_Disabled = 0 AND Active_Cards > 0 THEN 'Active'
        ELSE 'Deactive'
      END AS Employee_Status
    FROM EmpAgg
)
/* Final statement that consumes the CTE */
SELECT *
FROM EmpAggWithStatus
ORDER BY EmpName;
GO











Check below Queru carefulyy and fix the error 
Msg 102, Level 15, State 1, Line 41
Incorrect syntax near ')'.

Completion time: 2025-10-07T15:51:47.5634938+05:30



Database name is -ACVSUJournal_00010021



WITH EmpAgg AS (
        SELECT
          AP.ObjectID           AS EmployeeObjID,
          AP.Name               AS EmpName,
          CASE AP.Int1 WHEN 0 THEN AP.Text12 ELSE CAST(AP.Int1 AS NVARCHAR(50)) END AS EmployeeID,
          ISNULL(PT.Name, '')   AS PersonnelType,
          AP.Text10             AS Manager_Name,
          AP.Int4               AS Manager_WU_ID,
          AP.Disabled           AS Profile_Disabled,
          COUNT(ACR.Name)       AS Total_Cards,
          SUM(
            CASE
              WHEN (ACR.ExpirationDateTime IS NULL OR ACR.ExpirationDateTime >= GETDATE())
                AND (ACR.Disabled IS NULL OR ACR.Disabled = 0)
                AND (ACR.Lost IS NULL OR ACR.Lost = 0)
                AND (ACR.Stolen IS NULL OR ACR.Stolen = 0)
              THEN 1 ELSE 0
            END
          ) AS Active_Cards
        FROM ACVSCore.Access.Personnel AP
        LEFT JOIN ACVSCore.Access.Credential ACR ON AP.Name = ACR.Name
        LEFT JOIN ACVSCore.Access.PersonnelType PT ON PT.ObjectID = AP.PersonnelTypeID
        GROUP BY
          AP.ObjectID, AP.Name, AP.Int1, AP.Text12, PT.Name, AP.Text10, AP.Int4, AP.Disabled
      ),
      EmpAggWithStatus AS (
        SELECT
          EmployeeObjID,
          EmpName,
          EmployeeID,
          PersonnelType,
          Manager_Name,
          Manager_WU_ID,
          Profile_Disabled,
          Total_Cards,
          Active_Cards,
          CASE WHEN Profile_Disabled = 1 THEN 'Deactive'
               WHEN Profile_Disabled = 0 AND Active_Cards > 0 THEN 'Active'
               ELSE 'Deactive' END AS Employee_Status
        FROM EmpAgg
      )
