Good Now Upadte API endPoint and In frontend and Display data in Frontend 
SO read previous API Frontend file carefully ...


http://localhost:8000/ccure/verify?raw=true

{
  "date": "2025-08-28",
  "ccure_reported": {
    "employees": 8605,
    "contractors": 711,
    "total_reported": 9316
  },
  "headcount_attendance_summary": {
    "total_visited_today": 1440,
    "employee": 1320,
    "contractor": 120
  },
  "live_headcount_region_clients": {
    "currently_present_total": 1407,
    "employee": 1320,
    "contractor": 126
  },
  "percentages_vs_ccure": {
    "head_employee_pct_vs_ccure_today": 15.34,
    "head_contractor_pct_vs_ccure_today": 16.88,
    "head_overall_pct_vs_ccure_today": 15.46,
    "live_employee_pct_vs_ccure_today": 15.34,
    "live_contractor_pct_vs_ccure_today": 17.72,
    "live_overall_pct_vs_ccure_today": 15.1,
    "history_employee_pct_vs_ccure": 21.83,
    "history_contractor_pct_vs_ccure": 37.45,
    "history_overall_pct_vs_ccure": 23.02
  },
  "averages": {
    "history_avg_employee_last_7_days": 1878.71,
    "history_avg_contractor_last_7_days": 266.29,
    "history_avg_overall_last_7_days": 2145,
    "avg_headcount_last_7_days_db": 2145,
    "avg_headcount_per_site_last_7_days": 536.25,
    "employee_pct": null,
    "contractor_pct": null,
    "overall_pct": null,
    "head_emp_pct_vs_ccure_today": 15.34,
    "head_contractor_pct_vs_ccure_today": 16.88,
    "headcount_overall_pct_vs_ccure_today": 15.46,
    "live_employee_pct_vs_ccure": 15.34,
    "live_contractor_pct_vs_ccure": 17.72,
    "live_overall_pct_vs_ccure": 15.1,
    "avg_live_per_site": 351.75,
    "history_days_counted": 7,
    "history_employee_pct_vs_ccure": 21.83,
    "history_contractor_pct_vs_ccure": 37.45,
    "history_overall_pct_vs_ccure": 23.02,
    "history_today_employee_count": 1649,
    "history_today_contractor_count": 175,
    "history_today_employee_pct_vs_ccure": 19.16,
    "history_today_contractor_pct_vs_ccure": 24.61,
    "avg_by_location_last_7_days": {

    },
    "history_avg_by_location_last_7_days": {
      "US.CO.OBS": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 276.43,
        "avg_contractor_last_7_days": 27.43,
        "avg_overall_last_7_days": 303.86
      },
      "US.FL.Miami": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 16.4,
        "avg_contractor_last_7_days": 2,
        "avg_overall_last_7_days": 18.4
      },
      "USA/Canada Default": {
        "history_days_counted": 6,
        "avg_employee_last_7_days": 30.17,
        "avg_contractor_last_7_days": 2,
        "avg_overall_last_7_days": 32.17
      },
      "US.NYC": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 22.8,
        "avg_contractor_last_7_days": 0.8,
        "avg_overall_last_7_days": 23.6
      },
      "LT.Vilnius": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 301.71,
        "avg_contractor_last_7_days": 16.71,
        "avg_overall_last_7_days": 318.43
      },
      "MA.Casablanca": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 11.71,
        "avg_contractor_last_7_days": 0.86,
        "avg_overall_last_7_days": 12.57
      },
      "AUT.Vienna": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 28.29,
        "avg_contractor_last_7_days": 3.14,
        "avg_overall_last_7_days": 31.43
      },
      "IE.Dublin": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 18.29,
        "avg_contractor_last_7_days": 1.86,
        "avg_overall_last_7_days": 20.14
      },
      "ES.Madrid": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 44,
        "avg_contractor_last_7_days": 3,
        "avg_overall_last_7_days": 47
      },
      "UK.London": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 15.6,
        "avg_contractor_last_7_days": 1.2,
        "avg_overall_last_7_days": 16.8
      },
      "IT.Rome": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 19.8,
        "avg_contractor_last_7_days": 1.6,
        "avg_overall_last_7_days": 21.4
      },
      "DU.Abu Dhab": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 30.8,
        "avg_contractor_last_7_days": 1.2,
        "avg_overall_last_7_days": 32
      },
      "RU.Moscow": {
        "history_days_counted": 6,
        "avg_employee_last_7_days": 4.17,
        "avg_contractor_last_7_days": 1.5,
        "avg_overall_last_7_days": 5.67
      },
      "Quezon City": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 195.29,
        "avg_contractor_last_7_days": 37.86,
        "avg_overall_last_7_days": 233.14
      },
      "Pune": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 380.14,
        "avg_contractor_last_7_days": 77.86,
        "avg_overall_last_7_days": 458
      },
      "MY.Kuala Lumpur": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 3.6,
        "avg_contractor_last_7_days": 1,
        "avg_overall_last_7_days": 4.6
      },
      "JP.Tokyo": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 6.14,
        "avg_contractor_last_7_days": 0.71,
        "avg_overall_last_7_days": 6.86
      },
      "Taguig City": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 8.2,
        "avg_contractor_last_7_days": 1.6,
        "avg_overall_last_7_days": 9.8
      },
      "CR.Costa Rica Partition": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 334.29,
        "avg_contractor_last_7_days": 44.43,
        "avg_overall_last_7_days": 378.71
      },
      "AR.Cordoba": {
        "history_days_counted": 7,
        "avg_employee_last_7_days": 101.86,
        "avg_contractor_last_7_days": 30.14,
        "avg_overall_last_7_days": 132
      },
      "BR.Sao Paulo": {
        "history_days_counted": 6,
        "avg_employee_last_7_days": 35.67,
        "avg_contractor_last_7_days": 7.5,
        "avg_overall_last_7_days": 43.17
      },
      "MX.Mexico City": {
        "history_days_counted": 4,
        "avg_employee_last_7_days": 31.25,
        "avg_contractor_last_7_days": 4.5,
        "avg_overall_last_7_days": 35.75
      },
      "PA.Panama City": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 13.8,
        "avg_contractor_last_7_days": 2.2,
        "avg_overall_last_7_days": 16
      },
      "PE.Lima": {
        "history_days_counted": 5,
        "avg_employee_last_7_days": 30.4,
        "avg_contractor_last_7_days": 4,
        "avg_overall_last_7_days": 34.4
      }
    }
  },
  "notes": "Region totals (1407) differ from detail rows (1446); using region totals for overall and details for breakdown. | avg_headcount_last_range derived from region history endpoints due to missing AttendanceSummary historical data.",
  "headcount_details": {
    "total_visited_today": 1440,
    "employee": 1320,
    "contractor": 120,
    "by_location": {
      "LT.Vilnius": {
        "total": 305,
        "employee": 295,
        "contractor": 10
      },
      "Pune": {
        "total": 747,
        "employee": 672,
        "contractor": 75
      },
      "Quezon City": {
        "total": 176,
        "employee": 162,
        "contractor": 14
      },
      "IT.Rome": {
        "total": 18,
        "employee": 17,
        "contractor": 1
      },
      "AUT.Vienna": {
        "total": 43,
        "employee": 42,
        "contractor": 1
      },
      "UK.London": {
        "total": 20,
        "employee": 20,
        "contractor": 0
      },
      "ES.Madrid": {
        "total": 35,
        "employee": 34,
        "contractor": 1
      },
      "IE.Dublin": {
        "total": 16,
        "employee": 15,
        "contractor": 1
      },
      "Taguig City": {
        "total": 15,
        "employee": 13,
        "contractor": 2
      },
      "DU.Abu Dhab": {
        "total": 21,
        "employee": 21,
        "contractor": 0
      },
      "RU.Moscow": {
        "total": 5,
        "employee": 5,
        "contractor": 0
      },
      "AR.Cordoba": {
        "total": 5,
        "employee": 0,
        "contractor": 5
      },
      "JP.Tokyo": {
        "total": 9,
        "employee": 8,
        "contractor": 1
      },
      "MY.Kuala Lumpur": {
        "total": 6,
        "employee": 5,
        "contractor": 1
      },
      "CR.Costa Rica Partition": {
        "total": 4,
        "employee": 0,
        "contractor": 4
      },
      "MA.Casablanca": {
        "total": 11,
        "employee": 10,
        "contractor": 1
      },
      "US.CO.OBS": {
        "total": 2,
        "employee": 0,
        "contractor": 2
      },
      "BR.Sao Paulo": {
        "total": 1,
        "employee": 0,
        "contractor": 1
      },
      "US.FL.Miami": {
        "total": 1,
        "employee": 1,
        "contractor": 0
      }
    }
  },
  "live_headcount_details": {
    "currently_present_total": 1407,
    "employee": 1320,
    "contractor": 126,
    "by_location": {
      "US.CO.OBS": {
        "total": 3,
        "employee": 0,
        "contractor": 3
      },
      "US.FL.Miami": {
        "total": 1,
        "employee": 1,
        "contractor": 0
      },
      "LT.Vilnius": {
        "total": 305,
        "employee": 295,
        "contractor": 10
      },
      "UK.London": {
        "total": 20,
        "employee": 20,
        "contractor": 0
      },
      "MA.Casablanca": {
        "total": 11,
        "employee": 10,
        "contractor": 1
      },
      "AUT.Vienna": {
        "total": 45,
        "employee": 42,
        "contractor": 3
      },
      "IE.Dublin": {
        "total": 16,
        "employee": 15,
        "contractor": 1
      },
      "ES.Madrid": {
        "total": 36,
        "employee": 34,
        "contractor": 2
      },
      "DU.Abu Dhab": {
        "total": 21,
        "employee": 21,
        "contractor": 0
      },
      "IT.Rome": {
        "total": 18,
        "employee": 17,
        "contractor": 1
      },
      "RU.Moscow": {
        "total": 6,
        "employee": 5,
        "contractor": 1
      },
      "AR.Cordoba": {
        "total": 6,
        "employee": 0,
        "contractor": 6
      },
      "CR.Costa Rica Partition": {
        "total": 4,
        "employee": 0,
        "contractor": 4
      },
      "BR.Sao Paulo": {
        "total": 1,
        "employee": 0,
        "contractor": 1
      },
      "Pune": {
        "total": 747,
        "employee": 672,
        "contractor": 75
      },
      "Quezon City": {
        "total": 176,
        "employee": 162,
        "contractor": 14
      },
      "JP.Tokyo": {
        "total": 9,
        "employee": 8,
        "contractor": 1
      },
      "MY.Kuala Lumpur": {
        "total": 6,
        "employee": 5,
        "contractor": 1
      },
      "Taguig City": {
        "total": 15,
        "employee": 13,
        "contractor": 2
      }
    }
  },
  "ccure_active": {
    "active_employees": 8605,
    "active_contractors": 711,
    "ccure_active_employees_reported": 8605,
    "ccure_active_contractors_reported": 711
  },
  "raw": {
    "date": "2025-08-28",
    "headcount": {
      "total_visited_today": 1440,
      "employee": 1320,
      "contractor": 120,
      "by_location": {
        "LT.Vilnius": {
          "total": 305,
          "employee": 295,
          "contractor": 10
        },
        "Pune": {
          "total": 747,
          "employee": 672,
          "contractor": 75
        },
        "Quezon City": {
          "total": 176,
          "employee": 162,
          "contractor": 14
        },
        "IT.Rome": {
          "total": 18,
          "employee": 17,
          "contractor": 1
        },
        "AUT.Vienna": {
          "total": 43,
          "employee": 42,
          "contractor": 1
        },
        "UK.London": {
          "total": 20,
          "employee": 20,
          "contractor": 0
        },
        "ES.Madrid": {
          "total": 35,
          "employee": 34,
          "contractor": 1
        },
        "IE.Dublin": {
          "total": 16,
          "employee": 15,
          "contractor": 1
        },
        "Taguig City": {
          "total": 15,
          "employee": 13,
          "contractor": 2
        },
        "DU.Abu Dhab": {
          "total": 21,
          "employee": 21,
          "contractor": 0
        },
        "RU.Moscow": {
          "total": 5,
          "employee": 5,
          "contractor": 0
        },
        "AR.Cordoba": {
          "total": 5,
          "employee": 0,
          "contractor": 5
        },
        "JP.Tokyo": {
          "total": 9,
          "employee": 8,
          "contractor": 1
        },
        "MY.Kuala Lumpur": {
          "total": 6,
          "employee": 5,
          "contractor": 1
        },
        "CR.Costa Rica Partition": {
          "total": 4,
          "employee": 0,
          "contractor": 4
        },
        "MA.Casablanca": {
          "total": 11,
          "employee": 10,
          "contractor": 1
        },
        "US.CO.OBS": {
          "total": 2,
          "employee": 0,
          "contractor": 2
        },
        "BR.Sao Paulo": {
          "total": 1,
          "employee": 0,
          "contractor": 1
        },
        "US.FL.Miami": {
          "total": 1,
          "employee": 1,
          "contractor": 0
        }
      }
    },
    "live_headcount": {
      "currently_present_total": 1407,
      "employee": 1320,
      "contractor": 126,
      "by_location": {
        "US.CO.OBS": {
          "total": 3,
          "employee": 0,
          "contractor": 3
        },
        "US.FL.Miami": {
          "total": 1,
          "employee": 1,
          "contractor": 0
        },
        "LT.Vilnius": {
          "total": 305,
          "employee": 295,
          "contractor": 10
        },
        "UK.London": {
          "total": 20,
          "employee": 20,
          "contractor": 0
        },
        "MA.Casablanca": {
          "total": 11,
          "employee": 10,
          "contractor": 1
        },
        "AUT.Vienna": {
          "total": 45,
          "employee": 42,
          "contractor": 3
        },
        "IE.Dublin": {
          "total": 16,
          "employee": 15,
          "contractor": 1
        },
        "ES.Madrid": {
          "total": 36,
          "employee": 34,
          "contractor": 2
        },
        "DU.Abu Dhab": {
          "total": 21,
          "employee": 21,
          "contractor": 0
        },
        "IT.Rome": {
          "total": 18,
          "employee": 17,
          "contractor": 1
        },
        "RU.Moscow": {
          "total": 6,
          "employee": 5,
          "contractor": 1
        },
        "AR.Cordoba": {
          "total": 6,
          "employee": 0,
          "contractor": 6
        },
        "CR.Costa Rica Partition": {
          "total": 4,
          "employee": 0,
          "contractor": 4
        },
        "BR.Sao Paulo": {
          "total": 1,
          "employee": 0,
          "contractor": 1
        },
        "Pune": {
          "total": 747,
          "employee": 672,
          "contractor": 75
        },
        "Quezon City": {
          "total": 176,
          "employee": 162,
          "contractor": 14
        },
        "JP.Tokyo": {
          "total": 9,
          "employee": 8,
          "contractor": 1
        },
        "MY.Kuala Lumpur": {
          "total": 6,
          "employee": 5,
          "contractor": 1
        },
        "Taguig City": {
          "total": 15,
          "employee": 13,
          "contractor": 2
        }
      }
    },
    "ccure_active": {
      "ccure_active_employees_reported": 8605,
      "ccure_active_contractors_reported": 711
    },
    "averages": {
      "head_emp_pct_vs_ccure_today": 15.34,
      "head_contractor_pct_vs_ccure_today": 16.88,
      "headcount_overall_pct_vs_ccure_today": 15.46,
      "live_employee_pct_vs_ccure": 15.34,
      "live_contractor_pct_vs_ccure": 17.72,
      "live_overall_pct_vs_ccure": 15.1,
      "avg_headcount_last_7_days": 2145,
      "avg_headcount_per_site_last_7_days": 536.25,
      "avg_live_per_site": 351.75,
      "history_avg_employee_last_7_days": 1878.71,
      "history_avg_contractor_last_7_days": 266.29,
      "history_avg_overall_last_7_days": 2145,
      "history_days_counted": 7,
      "history_employee_pct_vs_ccure": 21.83,
      "history_contractor_pct_vs_ccure": 37.45,
      "history_overall_pct_vs_ccure": 23.02,
      "history_today_employee_count": 1649,
      "history_today_contractor_count": 175,
      "history_today_employee_pct_vs_ccure": 19.16,
      "history_today_contractor_pct_vs_ccure": 24.61,
      "avg_by_location_last_7_days": {

      },
      "history_avg_by_location_last_7_days": {
        "US.CO.OBS": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 276.43,
          "avg_contractor_last_7_days": 27.43,
          "avg_overall_last_7_days": 303.86
        },
        "US.FL.Miami": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 16.4,
          "avg_contractor_last_7_days": 2,
          "avg_overall_last_7_days": 18.4
        },
        "USA/Canada Default": {
          "history_days_counted": 6,
          "avg_employee_last_7_days": 30.17,
          "avg_contractor_last_7_days": 2,
          "avg_overall_last_7_days": 32.17
        },
        "US.NYC": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 22.8,
          "avg_contractor_last_7_days": 0.8,
          "avg_overall_last_7_days": 23.6
        },
        "LT.Vilnius": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 301.71,
          "avg_contractor_last_7_days": 16.71,
          "avg_overall_last_7_days": 318.43
        },
        "MA.Casablanca": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 11.71,
          "avg_contractor_last_7_days": 0.86,
          "avg_overall_last_7_days": 12.57
        },
        "AUT.Vienna": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 28.29,
          "avg_contractor_last_7_days": 3.14,
          "avg_overall_last_7_days": 31.43
        },
        "IE.Dublin": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 18.29,
          "avg_contractor_last_7_days": 1.86,
          "avg_overall_last_7_days": 20.14
        },
        "ES.Madrid": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 44,
          "avg_contractor_last_7_days": 3,
          "avg_overall_last_7_days": 47
        },
        "UK.London": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 15.6,
          "avg_contractor_last_7_days": 1.2,
          "avg_overall_last_7_days": 16.8
        },
        "IT.Rome": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 19.8,
          "avg_contractor_last_7_days": 1.6,
          "avg_overall_last_7_days": 21.4
        },
        "DU.Abu Dhab": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 30.8,
          "avg_contractor_last_7_days": 1.2,
          "avg_overall_last_7_days": 32
        },
        "RU.Moscow": {
          "history_days_counted": 6,
          "avg_employee_last_7_days": 4.17,
          "avg_contractor_last_7_days": 1.5,
          "avg_overall_last_7_days": 5.67
        },
        "Quezon City": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 195.29,
          "avg_contractor_last_7_days": 37.86,
          "avg_overall_last_7_days": 233.14
        },
        "Pune": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 380.14,
          "avg_contractor_last_7_days": 77.86,
          "avg_overall_last_7_days": 458
        },
        "MY.Kuala Lumpur": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 3.6,
          "avg_contractor_last_7_days": 1,
          "avg_overall_last_7_days": 4.6
        },
        "JP.Tokyo": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 6.14,
          "avg_contractor_last_7_days": 0.71,
          "avg_overall_last_7_days": 6.86
        },
        "Taguig City": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 8.2,
          "avg_contractor_last_7_days": 1.6,
          "avg_overall_last_7_days": 9.8
        },
        "CR.Costa Rica Partition": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 334.29,
          "avg_contractor_last_7_days": 44.43,
          "avg_overall_last_7_days": 378.71
        },
        "AR.Cordoba": {
          "history_days_counted": 7,
          "avg_employee_last_7_days": 101.86,
          "avg_contractor_last_7_days": 30.14,
          "avg_overall_last_7_days": 132
        },
        "BR.Sao Paulo": {
          "history_days_counted": 6,
          "avg_employee_last_7_days": 35.67,
          "avg_contractor_last_7_days": 7.5,
          "avg_overall_last_7_days": 43.17
        },
        "MX.Mexico City": {
          "history_days_counted": 4,
          "avg_employee_last_7_days": 31.25,
          "avg_contractor_last_7_days": 4.5,
          "avg_overall_last_7_days": 35.75
        },
        "PA.Panama City": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 13.8,
          "avg_contractor_last_7_days": 2.2,
          "avg_overall_last_7_days": 16
        },
        "PE.Lima": {
          "history_days_counted": 5,
          "avg_employee_last_7_days": 30.4,
          "avg_contractor_last_7_days": 4,
          "avg_overall_last_7_days": 34.4
        }
      }
    },
    "sites_queried": 4,
    "notes": "Region totals (1407) differ from detail rows (1446); using region totals for overall and details for breakdown. | avg_headcount_last_range derived from region history endpoints due to missing AttendanceSummary historical data.",
    "region_client_errors": [],
    "region_clients_unavailable": false
  }
}






in this File Replace Only APi endpoint ccure/average with  http://localhost:8000/ccure/verify?raw=true
Keep only another changes as it is ..


// frontend/vite.config.js
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';

const BACKEND_PY_PORT = process.env.BACKEND_PORT || 8000;
const BACKEND_PY_HOST = `http://localhost:${BACKEND_PY_PORT}`; // Python (ccure)
const NODE_BACKEND = 'http://localhost:3008';                 // Node (headcount + other legacy endpoints)

export default defineConfig({
  plugins: [react()],
  publicDir: path.resolve(__dirname, '../public'),
  resolve: {
    alias: {
      '@mui/material': path.resolve(__dirname, 'node_modules/@mui/material'),
      '@emotion/react': path.resolve(__dirname, 'node_modules/@emotion/react'),
      '@emotion/styled': path.resolve(__dirname, 'node_modules/@emotion/styled'),
    }
  },
  server: {
    port: 5173,
    hmr: { overlay: false },
    proxy: {
      // 1) Route CCURE-related API calls to Python backend and remove the /api prefix
      //    Example: /api/ccure/averages -> http://localhost:8000/ccure/averages
      '/api/ccure': {
        target: BACKEND_PY_HOST,
        changeOrigin: true,
        secure: false,
        rewrite: (path) => path.replace(/^\/api/, ''), // remove leading /api
        timeout: 120000
      },

      // 2) All other /api/* calls go to the legacy Node backend (no rewrite)
      //    This preserves the previous working headcount behavior:
      //    /api/headcount -> http://localhost:3008/api/headcount
      '/api': {
        target: NODE_BACKEND,
        changeOrigin: true,
        secure: false,
        // NOTE: NO rewrite here so the '/api' prefix is kept
        timeout: 120000
      }
    }
  }
});








// frontend/src/api.js
import axios from 'axios';

const api = axios.create({
  baseURL: '/api',         // frontend calls '/api/...' and vite proxy rewrites it
  timeout: 120000,
  headers: {
    'Accept': 'application/json',
  }
});

api.interceptors.response.use(
  (r) => r,
  (err) => {
    // friendly log for dev
    console.error('[API ERROR]', err?.config?.method?.toUpperCase(), err?.config?.url, err?.response?.status, err?.message);
    return Promise.reject(err);
  }
);

export default api;




In Below upadte only those data Which is previously display ccure average API  replace with http://localhost:8000/ccure/verify?raw=true
this API keep all remenaning as it is ...






// frontend/src/pages/GlobalPage.jsx
import React, { useState, useEffect, useRef } from 'react';
import {
  Box, Typography, CircularProgress, IconButton, Button, Paper, Divider,
  LinearProgress, Snackbar, Alert
} from '@mui/material';
import HomeIcon from '@mui/icons-material/Home';
import DescriptionIcon from '@mui/icons-material/Description';
import UploadFileIcon from '@mui/icons-material/UploadFile';
import MapChart from '../components/MapChart.jsx';
import api from '../api';
import { useNavigate, Link } from 'react-router-dom';

/*
  Important:
  - Do NOT mix /api/headcount and /api/ccure/averages.
  - Region cards (APAC/EMEA/LACA/NAMER) come only from /api/headcount.
  - Live vs CCURE Summary comes only from /api/ccure/averages.
  - Initial region totals are zero (keeps previous UI behaviour).
  - We implement polling for headcount and SSE for ccure/averages (realtime via SSE).
*/

export default function GlobalPage() {
  const navigate = useNavigate();

  // Region totals (headcount) - default to zeros so UI shows 0 immediately (preserve previous behaviour)
  const [counts, setCounts] = useState({ apac: 0, emea: 0, laca: 0, namer: 0 });
  const [selected, setSelected] = useState('global');

  // Averages/ccure state (left panel)
  const [averages, setAverages] = useState(null);
  const [loadingAverages, setLoadingAverages] = useState(true);
  const [averagesError, setAveragesError] = useState(null);

  // upload state
  const [uploading, setUploading] = useState(false);
  const [uploadResult, setUploadResult] = useState(null);
  const [uploadError, setUploadError] = useState(null);

  const fileInputEmpRef = useRef();
  const fileInputContrRef = useRef();
  const [snack, setSnack] = useState({ open: false, severity: 'info', message: '' });

  // Polling refs for safe scheduling and backoff
  const headcountRef = useRef({ timerId: null, failureCount: 0, isFetching: false });
  const averagesRef = useRef({ timerId: null, failureCount: 0, isFetching: false });

  // -----------------------
  // HEADCOUNT POLLING ONLY (unchanged)
  // -----------------------
  useEffect(() => {
    let mounted = true;

    const fetchHeadcount = async () => {
      if (!mounted) return;
      if (headcountRef.current.isFetching) return;
      headcountRef.current.isFetching = true;

      try {
        // Important: only call /headcount here (proxy rewrites /api -> backend)
        const res = await api.get('/headcount');
        if (!mounted) return;
        const d = res.data;
        // We expect an object with keys apac/emea/laca/namer (defensive)
        if (d && typeof d === 'object') {
          const newCounts = {
            apac: Number(d.apac || 0),
            emea: Number(d.emea || 0),
            laca: Number(d.laca || 0),
            namer: Number(d.namer || 0),
          };
          setCounts(prev => {
            if (
              prev.apac === newCounts.apac &&
              prev.emea === newCounts.emea &&
              prev.laca === newCounts.laca &&
              prev.namer === newCounts.namer
            ) {
              return prev;
            }
            return newCounts;
          });
        } else {
          console.warn('[headcount] unexpected response shape - ignoring', d);
        }
        headcountRef.current.failureCount = 0;
      } catch (err) {
        headcountRef.current.failureCount = (headcountRef.current.failureCount || 0) + 1;
        console.warn('[headcount] fetch failed:', err?.message || err);
      } finally {
        headcountRef.current.isFetching = false;
        const f = headcountRef.current.failureCount || 0;
        const backoffMs = 15000 * Math.pow(2, Math.min(Math.max(f - 1, 0), 4)); // 15s..240s
        headcountRef.current.timerId = setTimeout(fetchHeadcount, backoffMs);
      }
    };

    fetchHeadcount();

    return () => {
      mounted = false;
      if (headcountRef.current.timerId) clearTimeout(headcountRef.current.timerId);
      headcountRef.current.isFetching = false;
    };
  }, []); // run once



  // AVERAGES: use SSE (direct to Python backend) with fallback initial fetch
  useEffect(() => {
    let stopped = false;
    let es = null;
    let backoff = 1000;

    // Allow override via VITE_PY_BACKEND; otherwise assume python at :8000
    const PY_BACKEND = (import.meta.env.VITE_PY_BACKEND || `${window.location.protocol}//${window.location.hostname}:8000`).replace(/\/$/, '');

    const connect = () => {
      if (stopped) return;
      try {
        // Directly connect to Python SSE endpoint (bypasses Vite proxy for streaming)
        es = new EventSource(`${PY_BACKEND}/ccure/stream`);
      } catch (err) {
        console.warn('SSE creation failed', err);
        es = null;
      }

      if (!es) {
        // fallback to polling if EventSource not supported or creation failed
        initialFetch();
        return;
      }

      es.onopen = () => {
        console.info('[SSE] connected to', `${PY_BACKEND}/ccure/stream`);
        backoff = 1000;
        setAveragesError(null);
      };

      es.onmessage = (evt) => {
        try {
          const payload = JSON.parse(evt.data);
          setAverages(payload);
          setLoadingAverages(false);
          setAveragesError(null);
        } catch (e) {
          console.warn('Failed to parse SSE message', e);
        }
      };

      es.onerror = (err) => {
        console.warn('[SSE] error/closed, attempting reconnect', err);
        try { es.close(); } catch (e) {}
        es = null;
        if (stopped) return;
        // exponential backoff reconnect (capped)
        setTimeout(() => {
          backoff = Math.min(backoff * 2, 30000);
          connect();
        }, backoff);
      };
    };

    const initialFetch = async () => {
      setLoadingAverages(true);
      setAveragesError(null);
      try {
        const res = await api.get('/ccure/averages');
        setAverages(res.data);
        setLoadingAverages(false);
        setAveragesError(null);
      } catch (err) {
        console.warn('initial /ccure/averages fetch failed', err);
        setLoadingAverages(false);
        setAveragesError(err);
      }
    };

    // Start with initial fetch so UI is populated quickly, then open SSE
    initialFetch();
    connect();

    return () => {
      stopped = true;
      if (es) {
        try { es.close(); } catch (e) {}
        es = null;
      }
    };
  }, []);



  // -----------------------
  // Upload helper (unchanged)
  // -----------------------
  const handleUpload = async (file, type) => {
    if (!file) return;
    const endpoint = type === 'employee' ? '/upload/active-employees' : '/upload/active-contractors';
    const fd = new FormData();
    fd.append('file', file, file.name);

    setUploading(true);
    setUploadResult(null);
    setUploadError(null);

    try {
      const res = await api.post(endpoint, fd, {
        headers: { 'Content-Type': 'multipart/form-data' },
        timeout: 120000
      });
      setUploadResult(res.data);
      setSnack({ open: true, severity: 'success', message: `Upload successful: ${file.name}` });
      // Optionally re-fetch averages/headcount after successful upload:
      try { await api.get('/ccure/averages').then(r => setAverages(r.data)); } catch (_) {}
      try { await api.get('/headcount').then(r => {
        const d = r.data;
        if (d && typeof d === 'object') {
          setCounts(prev => ({
            apac: Number(d.apac || prev.apac || 0),
            emea: Number(d.emea || prev.emea || 0),
            laca: Number(d.laca || prev.laca || 0),
            namer: Number(d.namer || prev.namer || 0)
          }));
        }
      }) } catch (_) {}
    } catch (err) {
      console.error('Upload failed', err);
      setUploadError(err);
      setSnack({ open: true, severity: 'error', message: `Upload failed: ${file.name}` });
    } finally {
      setUploading(false);
    }
  };

  const onChooseEmployeeFile = (e) => { const f = e.target.files && e.target.files[0]; if (f) handleUpload(f, 'employee'); e.target.value = null; };
  const onChooseContractorFile = (e) => { const f = e.target.files && e.target.files[0]; if (f) handleUpload(f, 'contractor'); e.target.value = null; };

  // safe helper for nested averages paths
  const safe = (path, fallback = null) => {
    if (!averages) return fallback;
    try {
      return path.split('.').reduce((a, k) => (a && a[k] !== undefined ? a[k] : fallback), averages);
    } catch {
      return fallback;
    }
  };

  // derived
  const liveEmployee = safe('live_today.employee', safe('live_headcount.employee', null));
  const liveContractor = safe('live_today.contractor', safe('live_headcount.contractor', null));
  const liveTotalReported = safe('live_today.total_reported', safe('live_headcount.currently_present_total', null));
  const liveTotalDetails = safe('live_today.total_from_details', null);

  const ccureActiveEmployees = safe('ccure_active.active_employees', safe('ccure_active.ccure_active_employees_reported', null));
  const ccureActiveContractors = safe('ccure_active.active_contractors', safe('ccure_active.ccure_active_contractors_reported', null));

  const empPct = safe('averages.employee_pct', safe('averages.head_emp_pct_vs_ccure_today', null));
  const conPct = safe('averages.contractor_pct', safe('averages.head_contractor_pct_vs_ccure_today', null));
  const overallPct = safe('averages.overall_pct', safe('averages.headcount_overall_pct_vs_ccure_today', null));
  const avg7 = safe('averages.avg_headcount_last_7_days', safe('averages.history_avg_overall_last_7_days', null));

  // compact top-left summary box component
  const CompactSummary = () => {
    return (
      <Box
        sx={{
          width: { xs: '100%', md: 360 },
          minWidth: { md: 360 },
          height: 80,
          p: 1.25,
          display: 'flex',
          alignItems: 'center',
          border: '4px solid rgba(255, 204, 0, 0.89)',
          borderRadius: 2,
          bgcolor: 'rgba(255,255,255,0.01)',
          boxShadow: 3,
          cursor: 'pointer'
        }}
        onClick={() => {
          // scroll to left detail pane by focusing or otherwise
          const el = document.querySelector('[data-global-left-panel]');
          if (el) el.scrollIntoView({ behavior: 'smooth', block: 'start' });
          setSelected('global');
        }}
      >
        <Box sx={{ flex: 1 }}>
          <Typography sx={{ fontWeight: 'bold', fontSize: 14, color: 'primary.main' }}>Live vs CCURE Summary</Typography>
          {loadingAverages ? (
            <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>
              <CircularProgress size={14} sx={{ mr: 1 }} />
              <Typography variant="caption" color="text.secondary">Loading...</Typography>
            </Box>
          ) : averagesError ? (
            <Typography variant="caption" color="error">Failed</Typography>
          ) : (
            <Box sx={{ display: 'flex', gap: 2, mt: 0.5 }}>
              <Box>
                <Typography sx={{ fontWeight: 700 }}>{ccureActiveEmployees ?? '—'}</Typography>
                <Typography variant="caption" color="text.secondary">CCURE Active</Typography>
              </Box>
              <Box>
                <Typography sx={{ fontWeight: 700 }}>{liveEmployee ?? '—'}</Typography>
                <Typography variant="caption" color="text.secondary">Live Emp</Typography>
              </Box>
              <Box>
                <Typography sx={{ fontWeight: 700 }}>{liveTotalReported ?? '—'}</Typography>
                <Typography variant="caption" color="text.secondary">Reported</Typography>
              </Box>
            </Box>
          )}
        </Box>
      </Box>
    );
  };

  // Render
  return (
    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh', overflow: 'hidden' }}>
      {/* Header */}
      <Box px={2} py={1} sx={{ backgroundColor: 'black', color: '#fff', borderBottom: '4px solid #FFD700', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
        <Box>
          <IconButton component={Link} to="/" sx={{ color: '#FFC72C' }}><HomeIcon fontSize="medium" /></IconButton>
          <IconButton component={Link} to="/reports" sx={{ color: '#FFC72C', ml: 1 }}><DescriptionIcon fontSize="medium" /></IconButton>
        </Box>

        <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
          <Box component="img" src="/wu-head-logo.png" alt="WU Logo" sx={{ height: { xs: 30, md: 55 }, mr: 2 }} />
          <Typography variant="h5" sx={{ fontWeight: 'bold', color: 'primary.main' }}>Global Headcount Dashboard</Typography>
        </Box>

        <Box sx={{ width: 120 }} />
      </Box>

      {/* Top row: Compact Live vs CCURE Summary (left) + Region Cards (right) */}
      <Box sx={{ display: 'flex', gap: 2, p: 2, flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center' }}>
        <CompactSummary />

        {/* Region Cards */}
        {[
          { key: 'apac', label: 'APAC', url: 'http://10.199.22.57:3000/', textColor: '#f5650c' },
          { key: 'emea', label: 'EMEA', url: 'http://10.199.22.57:3001/', textColor: '#11e6ed' },
          { key: 'laca', label: 'LACA', url: 'http://10.199.22.57:3003/', textColor: '#FF2DD1' },
          { key: 'namer', label: 'NAMER', url: 'http://10.199.22.57:3002/', textColor: '#a6e61c' },
        ].map(region => (
          <Box
            key={region.key}
            onClick={() => { window.location.href = region.url; }}
            sx={{
              cursor: 'pointer',
              width: 200,
              height: 80,
              display: 'flex',
              flexDirection: 'column',
              justifyContent: 'center',
              alignItems: 'center',
              border: '4px solid rgba(255, 204, 0, 0.89)',
              borderRadius: 2,
              boxShadow: 3,
              color: region.textColor,
              '&:hover': { opacity: 0.9 },
            }}
          >
            <Typography variant="subtitle1" sx={{ fontWeight: 'bold', color: region.textColor, fontSize: { xs: '1.3rem' } }}>{region.label}</Typography>
            <Typography variant="h3" sx={{ fontWeight: 700, fontSize: { xs: '1.5rem', sm: '1.8rem' }, color: region.textColor }}>
              {typeof counts[region.key] === 'number' ? counts[region.key] : 0}
            </Typography>
          </Box>
        ))}
      </Box>

      {/* Main */}
      <Box sx={{ display: 'flex', flex: 1, overflow: 'hidden' }}>
        <Box data-global-left-panel sx={{ width: 360, p: 2, bgcolor: 'background.paper', borderRight: '1px solid rgba(255,255,255,0.06)', overflowY: 'auto' }}>
          <Typography variant="h6" sx={{ mb: 1, color: 'primary.main' }}>Live vs CCURE Summary</Typography>

          {loadingAverages ? (
            <Box sx={{ py: 2 }}><LinearProgress /></Box>
          ) : averagesError ? (
            <Alert severity="error">Failed to load CCURE averages</Alert>
          ) : averages ? (
            <>
              <Paper sx={{ p: 2, mb: 2, bgcolor: 'rgba(255,255,255,0.03)' }} elevation={0}>
                <Typography variant="subtitle2" color="text.secondary">CCURE Active (reported)</Typography>
                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>
                  <Box>
                    <Typography variant="h5" sx={{ fontWeight: 700 }}>{ccureActiveEmployees ?? '—'}</Typography>
                    <Typography variant="caption" color="text.secondary">Active Employees</Typography>
                  </Box>
                  <Box sx={{ textAlign: 'right' }}>
                    <Typography variant="h5" sx={{ fontWeight: 700 }}>{ccureActiveContractors ?? '—'}</Typography>
                    <Typography variant="caption" color="text.secondary">Active Contractors</Typography>
                  </Box>
                </Box>
              </Paper>

              <Paper sx={{ p: 2, mb: 2, bgcolor: 'rgba(255,255,255,0.03)' }} elevation={0}>
                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
                  <Typography variant="subtitle2" color="text.secondary">Live Today</Typography>
                  <Typography variant="caption" color="text.secondary">{averages.date ?? ''}</Typography>
                </Box>

                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>
                  <Box>
                    <Typography variant="h6" sx={{ fontWeight: 700 }}>{liveEmployee ?? '—'}</Typography>
                    <Typography variant="caption" color="text.secondary">Employee</Typography>
                  </Box>
                  <Box>
                    <Typography variant="h6" sx={{ fontWeight: 700 }}>{liveContractor ?? '—'}</Typography>
                    <Typography variant="caption" color="text.secondary">Contractor</Typography>
                  </Box>
                </Box>

                <Divider sx={{ my: 1 }} />

                <Box>
                  <Typography variant="caption" color="text.secondary">Totals</Typography>
                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 0.5 }}>
                    <Typography variant="body2">Reported total</Typography>
                    <Typography variant="body2" sx={{ fontWeight: 700 }}>{liveTotalReported ?? '—'}</Typography>
                  </Box>
                  {liveTotalDetails != null && (
                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 0.5 }}>
                      <Typography variant="body2">Detail rows total</Typography>
                      <Typography variant="body2" sx={{ fontWeight: 700 }}>{liveTotalDetails}</Typography>
                    </Box>
                  )}
                </Box>
              </Paper>

              <Paper sx={{ p: 2, mb: 2, bgcolor: 'rgba(255,255,255,0.03)' }} elevation={0}>
                <Typography variant="subtitle2" color="text.secondary">Percentages vs CCURE</Typography>

                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>
                  <Typography variant="body2">Employees</Typography>
                  <Typography variant="body2" sx={{ fontWeight: 700 }}>{empPct != null ? `${empPct}%` : '—'}</Typography>
                </Box>
                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
                  <Typography variant="body2">Contractors</Typography>
                  <Typography variant="body2" sx={{ fontWeight: 700 }}>{conPct != null ? `${conPct}%` : '—'}</Typography>
                </Box>
                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 0.5 }}>
                  <Typography variant="body2">Overall</Typography>
                  <Typography variant="body2" sx={{ fontWeight: 700 }}>{overallPct != null ? `${overallPct}%` : '—'}</Typography>
                </Box>

                <Divider sx={{ my: 1 }} />
                <Typography variant="caption" color="text.secondary">Averages</Typography>
                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>
                  <Typography variant="body2">7-day avg headcount</Typography>
                  <Typography variant="body2" sx={{ fontWeight: 700 }}>{avg7 ?? '—'}</Typography>
                </Box>
              </Paper>

              <Paper sx={{ p: 2, mb: 2, bgcolor: 'rgba(255,255,255,0.03)' }} elevation={0}>
                <Typography variant="subtitle2" color="text.secondary" sx={{ mb: 1 }}>Upload Active Sheets</Typography>

                <input type="file" accept=".xls,.xlsx" style={{ display: 'none' }} ref={fileInputEmpRef} onChange={onChooseEmployeeFile} />
                <Button variant="contained" startIcon={<UploadFileIcon />} sx={{ mr: 1 }} onClick={() => fileInputEmpRef.current && fileInputEmpRef.current.click()} disabled={uploading}>
                  Upload Employees
                </Button>

                <input type="file" accept=".xls,.xlsx" style={{ display: 'none' }} ref={fileInputContrRef} onChange={onChooseContractorFile} />
                <Button variant="outlined" startIcon={<UploadFileIcon />} onClick={() => fileInputContrRef.current && fileInputContrRef.current.click()} disabled={uploading}>
                  Upload Contractors
                </Button>

                {uploading && <Box sx={{ mt: 1 }}><LinearProgress /></Box>}
                {uploadResult && <Typography variant="caption" color="success.main" sx={{ mt: 1, display: 'block' }}>Upload OK</Typography>}
                {uploadError && <Typography variant="caption" color="error.main" sx={{ mt: 1, display: 'block' }}>Upload error</Typography>}
              </Paper>

              {averages.notes && (
                <Paper sx={{ p: 2, mb: 2, bgcolor: 'rgba(255,255,255,0.02)' }}>
                  {/* <Typography variant="caption" color="text.secondary">Notes</Typography> */}
                  <Typography variant="body2" sx={{ mt: 1 }}>{averages.notes}</Typography>
                </Paper>
              )}
            </>
          ) : (
            <Typography variant="body2" color="text.secondary">No data</Typography>
          )}
        </Box>

        <Box sx={{ flex: 1, height: '100%', position: 'relative' }}>
          <MapChart selected={selected} onClickSite={r => setSelected(r)} initialZoom={1.8} />
        </Box>
      </Box>

      <Snackbar open={snack.open} autoHideDuration={3500} onClose={() => setSnack(prev => ({ ...prev, open: false }))}>
        <Alert severity={snack.severity} onClose={() => setSnack(prev => ({ ...prev, open: false }))}>{snack.message}</Alert>
      </Snackbar>
    </Box>
  );
}







