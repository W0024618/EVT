// frontend/src/pages/LoginPage.jsx
import React, { useState } from 'react';
import { Box, Paper, TextField, Button, Typography, Alert } from '@mui/material';
import { useNavigate, useLocation } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';

export default function LoginPage() {
  const auth = useAuth();
  const navigate = useNavigate();
  const location = useLocation();
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [busy, setBusy] = useState(false);
  const [error, setError] = useState('');

  const from = (location.state && location.state.from) || '/';

  const handleSubmit = async (e) => {
    e?.preventDefault();
    setBusy(true);
    setError('');
    const res = await auth.login(username.trim(), password);
    setBusy(false);
    if (res.ok) {
      navigate(from, { replace: true });
    } else {
      setError(res.error || 'Invalid credentials');
    }
  };

  return (
    <Box sx={{
      minHeight: '100vh',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      background: 'linear-gradient(180deg,#0b0b0b,#111)'
    }}>
      <Paper sx={{ width: 420, p: 4, borderRadius: 2, boxShadow: 6 }}>
        <Typography variant="h6" sx={{ mb: 2, fontWeight: 800 }}>Login â€” Global Page</Typography>
        {error && <Alert severity="error" sx={{ mb: 2 }}>{error}</Alert>}
        <form onSubmit={handleSubmit}>
          <TextField fullWidth label="Username (Employee name or ID)" value={username} onChange={e => setUsername(e.target.value)} sx={{ mb: 2 }} />
          <TextField fullWidth label="Password" type="password" value={password} onChange={e => setPassword(e.target.value)} sx={{ mb: 2 }} />
          <Box sx={{ display: 'flex', gap: 1, justifyContent: 'space-between', alignItems: 'center' }}>
            <Button variant="contained" type="submit" disabled={busy}>{busy ? 'Signing in...' : 'Sign in'}</Button>
            <Button variant="outlined" onClick={() => { setUsername(''); setPassword(''); }}>Clear</Button>
          </Box>
        </form>

        <Typography variant="caption" sx={{ display: 'block', mt: 2, color: 'text.secondary' }}>
          Tip: use backend-registered employee credentials. Admins with grant permissions will see an Access Manager link.
        </Typography>
      </Paper>
    </Box>
  );
}
