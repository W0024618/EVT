http://localhost:3001/api/occupancy/live-summary
{
  "success": true,
  "today": {
    "total": 7,
    "Employee": 0,
    "Contractor": 7,
    "TempBadge": 0
  },
  "realtime": {
    "CR.Costa Rica Partition": {
      "total": 5,
      "Employee": 0,
      "Contractor": 5,
      "TempBadge": 0,
      "floors": {
        " Building B1": 2,
        "Building E4": 2,
        "Building A3": 1
      }
    }
  },
  "details": [
    {
      "LocaleMessageTime": "2025-08-12T01:17:54.000Z",
      "Dateonly": "2025-08-12",
      "Swipe_Time": "01:17:54",
      "EmployeeID": "73432593",
      "PersonGUID": "1EDE1199-D3A6-405E-B1D2-9BEBA4A73F63",
      "ObjectName1": "Obando, Kevin",
      "Door": "LACA CR B1 Main Lobby Door",
      "PersonnelType": "Contractor",
      "CardNumber": "612770",
      "Text5": "Santa Ana - Parque Empresarial",
      "PartitionName2": "CR.Costa Rica Partition",
      "AdmitCode": "Admit",
      "Direction": "InDirection"
    },


add "PartitionName2": "CR.Costa Rica Partition", add Floor section below partationName2 .




//C:\Users\W0024618\Desktop\laca-occupancy-backend\src\controllers\occupancy.controller.js


const service = require('../services/occupancy.service');
const doorMap = require('../utils/doorMap'); 



exports.getLiveOccupancy = async (req, res) => {
  try {
    const data = await service.fetchLiveOccupancy();
    res.json({ success: true, count: data.length, data });
  } catch (err) {
    console.error(err);
    res.status(500).json({ success: false, message: 'Live occupancy fetch failed' });
  }
};


/**
 * Returns true if this PersonnelType counts as Employee.
 * Everything else (including blank) counts as Contractor.
 */

function isEmployeeType(pt) {
  return pt === 'Employee'
      || pt === 'Terminated Employee'
      || pt === 'Terminated Personnel';
}

/**
 * Returns true if this PersonnelType is a Temp Badge.
 */
// function isTempBadgeType(pt) {
//   return pt === 'Temp Badge';
// }


function isTempBadgeType(pt) {
  // handle both variants from the database
  return pt === 'Temp Badge' || pt === 'TempBadge';
}



/**
 * Look up floor for a given record by matching door + partition.
 */
function lookupFloor(partition, door, direction, unmappedSet) {
  const entry = doorMap.find(d =>
    d.partition === partition && d.door === door
  );
  if (!entry) {
    unmappedSet.add(`${partition} | ${door}`);
    return null;
  }
  return direction === 'InDirection'
    ? entry.inDirectionFloor
    : entry.outDirectionFloor;
}

exports.getLiveSummary = async (req, res) => {
  try {
    const swipes = await service.fetchLiveOccupancy();

    // 1. TODAY’S HEADCOUNT: first swipe per person
    const firstByPerson = {};
    swipes.forEach(r => {
      const prev = firstByPerson[r.PersonGUID];
      const t = new Date(r.LocaleMessageTime).getTime();
      if (!prev || t < new Date(prev.LocaleMessageTime).getTime()) {
        firstByPerson[r.PersonGUID] = r;
      }
    });
    const todayRecs = Object.values(firstByPerson);
    const today = { total: 0, Employee: 0, Contractor: 0, TempBadge: 0 };
    todayRecs.forEach(r => {
      today.total++;
      if (isTempBadgeType(r.PersonnelType)) today.TempBadge++;
      else if (isEmployeeType(r.PersonnelType)) today.Employee++;
      else today.Contractor++;
    });

    // 2. REAL-TIME: last swipe per person, only InDirection
    const lastByPerson = {};
    swipes.forEach(r => {
      const prev = lastByPerson[r.PersonGUID];
      const t = new Date(r.LocaleMessageTime).getTime();
      if (!prev || t > new Date(prev.LocaleMessageTime).getTime()) {
        lastByPerson[r.PersonGUID] = r;
      }
    });

    const realtime = {};
    const unmappedDoors = new Set();
    Object.values(lastByPerson).forEach(r => {
      // if (r.Direction !== 'InDirection') return;
     // ● only remove if this door truly maps to "Out of office"
     if (r.Direction === 'OutDirection') {
       const floor = lookupFloor(r.PartitionName2, r.Door, r.Direction, unmappedDoors);
       if (floor === 'Out of office' || floor?.trim() === 'Out of office') {
         return; // true exit → evict
       }
       // otherwise fall through and count them
     }


      const p = r.PartitionName2;
      // initialize, including TempBadge for CR
      if (!realtime[p]) {
        realtime[p] = { total: 0, Employee: 0, Contractor: 0 };
        if (p === 'CR.Costa Rica Partition') realtime[p].TempBadge = 0;
        realtime[p].floors = {};
      }
      realtime[p].total++;
      if (isTempBadgeType(r.PersonnelType)) realtime[p].TempBadge++;
      else if (isEmployeeType(r.PersonnelType)) realtime[p].Employee++;
      else realtime[p].Contractor++;

      const floor = lookupFloor(p, r.Door, r.Direction, unmappedDoors) || 'Unmapped';
      realtime[p].floors[floor] = (realtime[p].floors[floor] || 0) + 1;
    });

    if (unmappedDoors.size) {
      console.warn('Unmapped doors:\n' + Array.from(unmappedDoors).join('\n'));
    }

    return res.json({
      success: true,
      today,
      realtime,
      details: Object.values(lastByPerson)
    });
  } catch (err) {
    console.error(err);
    return res.status(500).json({ success: false, message: 'Live summary failed' });
  }
};


exports.getHistoricalOccupancy = async (req, res) => {
  const location = req.params.location || null;
  try {
    const raw = await service.fetchHistoricalOccupancy(location);

    // first swipe per person per date
    const byDate = raw.reduce((acc, r) => {
      const iso = (r.LocaleMessageTime instanceof Date)
        ? r.LocaleMessageTime.toISOString()
        : r.LocaleMessageTime;
      const date = iso.slice(0,10);
      acc[date] = acc[date] || {};
      const prev = acc[date][r.PersonGUID];
      if (!prev || new Date(iso) < new Date(prev.LocaleMessageTime)) {
        acc[date][r.PersonGUID] = { ...r, LocaleMessageTime: iso };
      }
      return acc;
    }, {});

    const summaryByDate = [];
    const details = [];

    Object.keys(byDate).sort().forEach(date => {
      const recs = Object.values(byDate[date]);
      details.push(...recs);

      // initialize region counts, including TempBadge for CR location
      const regionCounts = { total: 0, Employee: 0, Contractor: 0 };
      if (location === 'CR.Costa Rica Partition') regionCounts.TempBadge = 0;

      const partitionCounts = {};
      recs.forEach(r => {
        regionCounts.total++;
        if (isTempBadgeType(r.PersonnelType)) regionCounts.TempBadge++;
        else if (isEmployeeType(r.PersonnelType)) regionCounts.Employee++;
        else regionCounts.Contractor++;

        if (!location) {
          const p = r.PartitionName2;
          if (!partitionCounts[p]) {
            partitionCounts[p] = { total: 0, Employee: 0, Contractor: 0 };
            if (p === 'CR.Costa Rica Partition') partitionCounts[p].TempBadge = 0;
          }
          partitionCounts[p].total++;
          if (isTempBadgeType(r.PersonnelType)) partitionCounts[p].TempBadge++;
          else if (isEmployeeType(r.PersonnelType)) partitionCounts[p].Employee++;
          else partitionCounts[p].Contractor++;
        }
      });

      summaryByDate.push({
        date,
        day: new Date(date).toLocaleDateString('en-US', { weekday:'long' }),
        region: location
          ? { name: location, ...regionCounts }
          : { name: 'LACA', ...regionCounts },
        partitions: location ? undefined : partitionCounts
      });
    });

    return res.json({ success: true, summaryByDate, details });
  } catch (err) {
    console.error(err);
    return res.status(500).json({ success: false, message: 'Historical fetch failed' });
  }
};










// src/routes/occupancy.routes.js

const express = require('express');
const router  = express.Router();
const controller = require('../controllers/occupancy.controller');

// Live raw and summary
router.get('/live',         controller.getLiveOccupancy);
router.get('/live-summary', controller.getLiveSummary);

// History: all partitions or a single one
router.get('/history',             controller.getHistoricalOccupancy);
router.get('/history/:location',   controller.getHistoricalOccupancy);

module.exports = router;






// src/services/occupancy.service.js

const { poolPromise, sql } = require('../config/db');
const partitionList = [
  'AR.Cordoba', 
  'BR.Sao Paulo',
  'CR.Costa Rica Partition',
  'MX.Mexico City',
  'PA.Panama City',
  'PE.Lima'
];

/**
 * Live occupancy (today) query unchanged.
 */
exports.fetchLiveOccupancy = async () => {
  const pool = await poolPromise;
  const partitionsSql = partitionList.map(p => `'${p.replace("'", "''")}'`).join(',');

  const query = `
    WITH CombinedQuery AS (
      SELECT
        DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC) AS LocaleMessageTime,
        t1.ObjectName1,
        t1.ObjectName2            AS Door,
        CASE
          WHEN t3.Name IN ('Contractor','Terminated Contractor')
            THEN t2.Text12
          ELSE CAST(t2.Int1 AS NVARCHAR)
        END                       AS EmployeeID,
        t2.text5                  AS Text5,
        t1.PartitionName2         AS PartitionName2,
        t1.ObjectIdentity1        AS PersonGUID,
        t3.Name                   AS PersonnelType,
        COALESCE(
          TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID/Card)[1]','varchar(50)'),
          TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID)[1]','varchar(50)'),
          sc.value
        )                         AS CardNumber,
        t5a.value                 AS AdmitCode,
        t5d.value                 AS Direction
      FROM [ACVSUJournal_00010028].[dbo].[ACVSUJournalLog] AS t1
      LEFT JOIN [ACVSCore].[Access].[Personnel]     AS t2
        ON t1.ObjectIdentity1 = t2.GUID
      LEFT JOIN [ACVSCore].[Access].[PersonnelType] AS t3
        ON t2.PersonnelTypeId = t3.ObjectID
      LEFT JOIN [ACVSUJournal_00010028].[dbo].[ACVSUJournalLogxmlShred] AS t5a
        ON t1.XmlGUID = t5a.GUID AND t5a.Name = 'AdmitCode'
      LEFT JOIN [ACVSUJournal_00010028].[dbo].[ACVSUJournalLogxmlShred] AS t5d
        ON t1.XmlGUID = t5d.GUID AND t5d.Value IN ('InDirection','OutDirection')
      LEFT JOIN [ACVSUJournal_00010028].[dbo].[ACVSUJournalLogxml] AS t_xml
        ON t1.XmlGUID = t_xml.GUID
      LEFT JOIN (
        SELECT GUID, value
        FROM [ACVSUJournal_00010028].[dbo].[ACVSUJournalLogxmlShred]
        WHERE Name IN ('Card','CHUID')
      ) AS sc
        ON t1.XmlGUID = sc.GUID
      
        WHERE
       t1.MessageType = 'CardAdmitted'
        AND t1.PartitionName2 IN (${partitionsSql})
        AND CONVERT(
            DATE,
            DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)
        )
          = CONVERT(
              DATE,
              DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, GETUTCDATE())
            )        
    )
    SELECT
      LocaleMessageTime,
      CONVERT(VARCHAR(10), LocaleMessageTime, 23) AS Dateonly,
      CONVERT(VARCHAR(8), LocaleMessageTime, 108) AS Swipe_Time,
      EmployeeID,
      PersonGUID,
      ObjectName1,
      Door,
      PersonnelType,
      CardNumber,
      Text5,
      PartitionName2,
      AdmitCode,
      Direction
    FROM CombinedQuery
    ORDER BY LocaleMessageTime ASC;
  `;

  const result = await pool.request().query(query);
  return result.recordset;
};


/**
 * Core raw‐data fetch for the past N days, all or by location.
 */
exports.fetchHistoricalData = async ({ days = 7, location = null }) => {
  const pool = await poolPromise;
  const partitionsSql = partitionList.map(p => `'${p.replace("'", "''")}'`).join(',');
  const locationFilter = location
    ? `AND t1.PartitionName2 = @location`
    : `AND t1.PartitionName2 IN (${partitionsSql})`;

  const query = `
    WITH Hist AS (
      SELECT
        DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC) AS LocaleMessageTime,
        t1.ObjectName1,
        t1.ObjectName2       AS Door,
        CASE
          WHEN t3.Name IN ('Contractor','Terminated Contractor') THEN t2.Text12
          ELSE CAST(t2.Int1 AS NVARCHAR)
        END                   AS EmployeeID,
        t2.text5             AS Text5,
        t1.PartitionName2    AS PartitionName2,
        t1.ObjectIdentity1   AS PersonGUID,
        t3.Name              AS PersonnelType,
        COALESCE(
          TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID/Card)[1]','varchar(50)'),
          TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID)[1]','varchar(50)'),
          sc.value
        )                     AS CardNumber,
        t5a.value            AS AdmitCode,
        t5d.value            AS Direction,
        CONVERT(DATE, DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)) AS SwipeDate
      FROM [ACVSUJournal_00010028].[dbo].[ACVSUJournalLog] AS t1
      LEFT JOIN [ACVSCore].[Access].[Personnel]     AS t2
        ON t1.ObjectIdentity1 = t2.GUID
      LEFT JOIN [ACVSCore].[Access].[PersonnelType] AS t3
        ON t2.PersonnelTypeId = t3.ObjectID
      LEFT JOIN [ACVSUJournal_00010028].[dbo].[ACVSUJournalLogxmlShred] AS t5a
        ON t1.XmlGUID = t5a.GUID AND t5a.Name = 'AdmitCode'
      LEFT JOIN [ACVSUJournal_00010028].[dbo].[ACVSUJournalLogxmlShred] AS t5d
        ON t1.XmlGUID = t5d.GUID AND t5d.Value IN ('InDirection','OutDirection')
      LEFT JOIN [ACVSUJournal_00010028].[dbo].[ACVSUJournalLogxml] AS t_xml
        ON t1.XmlGUID = t_xml.GUID
      LEFT JOIN (
        SELECT GUID, value
        FROM [ACVSUJournal_00010028].[dbo].[ACVSUJournalLogxmlShred]
        WHERE Name IN ('Card','CHUID')
      ) AS sc
        ON t1.XmlGUID = sc.GUID
     
       WHERE
        t1.MessageType = 'CardAdmitted'
        ${locationFilter}
        AND CONVERT(
            DATE,
            DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)
        )
          >= DATEADD(
              DAY,
              -${days},
              CONVERT(
                DATE,
                DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, GETUTCDATE())
              )
            )

    )

    SELECT *
    FROM Hist
    ORDER BY LocaleMessageTime ASC;
  `;

  const req = pool.request();
  if (location) req.input('location', sql.NVarChar, location);
  const result = await req.query(query);
  return result.recordset;
};


/**
 * Public wrapper: always last 7 days, all or by location.
 */
exports.fetchHistoricalOccupancy = async (location) => {
  return exports.fetchHistoricalData({ days: 7, location: location || null });
};

module.exports.partitionList = partitionList;











// src/utils/doorMap.js

module.exports = [
  { partition: 'AR.Cordoba', door: 'LACA ARG 1st Floor Main Entrance', inDirectionFloor: '1st Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 1st Floor Emergency Stairs', inDirectionFloor: '1st Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'AR_MonteVideo_DR_1stFlrCSC IN/OUT DELETE', inDirectionFloor: '1st Floor', outDirectionFloor: '1st Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 2nd Floor Main Entrance', inDirectionFloor: '2nd Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 2nd Floor Emergency Stairs', inDirectionFloor: '2nd Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 2nd Floor HR 2nd Entrance', inDirectionFloor: '2nd Floor', outDirectionFloor: '2nd Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 2nd Floor IT Room', inDirectionFloor: '2nd Floor', outDirectionFloor: '2nd Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 2nd Floor 1ST Entrance HR', inDirectionFloor: '2nd Floor', outDirectionFloor: '2nd Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 3rd Floor Main Entrance', inDirectionFloor: '3rd Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 3rd Floor Emergency Stairs', inDirectionFloor: '3rd Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 4th Floor Emergency Stairs', inDirectionFloor: '4th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 6th Floor Main Entrance', inDirectionFloor: '6th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 6th Floor Emergency Stairs', inDirectionFloor: '6th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 4th Floor Main Entrance', inDirectionFloor: '4th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 2nd Floor Risk & Credit  Finance', inDirectionFloor: '2nd Floor', outDirectionFloor: '2nd Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 2nd Floor HR File', inDirectionFloor: '2nd Floor', outDirectionFloor: '2nd Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 5th Floor Main Entrance', inDirectionFloor: '5th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 5th Floor Emergency Stairs', inDirectionFloor: '5th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 5th FloorTreasury', inDirectionFloor: '5th Floor', outDirectionFloor: '5th Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 5th Floor IT Room', inDirectionFloor: '5th Floor', outDirectionFloor: '5th Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 7th Floor Main Entrance', inDirectionFloor: '7th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 7th Floor Emergency Stairs', inDirectionFloor: '7th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 7th Floor IT Room', inDirectionFloor: '7th Floor', outDirectionFloor: '7th Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 12TH Floor Terrace', inDirectionFloor: '12th Floor', outDirectionFloor: '12th Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 8th Floor Left Entrance Lunch Room', inDirectionFloor: '8th Floor', outDirectionFloor: '8th Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 8th Floor Right Entrance Audience', inDirectionFloor: '8th Floor', outDirectionFloor: '8th Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 8th Floor Emergency Stairs', inDirectionFloor: '8th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 9th FLOOR Main Entrance', inDirectionFloor: '9th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 9th Floor Emergency Stairs', inDirectionFloor: '9th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 10th Floor Main Entrance', inDirectionFloor: '10th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 10TH Floor Emergency Stairs', inDirectionFloor: '10th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 12th Floor Main Entrance', inDirectionFloor: '12th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 12th Floor Rear entrance', inDirectionFloor: '12th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'AR.Cordoba', door: 'AR.MonteVideo.2 Floor. HHRR Archive.DR', inDirectionFloor: '2nd Floor', outDirectionFloor: '2nd Floor' },
  { partition: 'AR.Cordoba', door: 'LACA ARG 12th Floor Emergency Stairs', inDirectionFloor: '12th Floor', outDirectionFloor: 'Out of office ' },





  { partition: 'AR.Cordoba', door: 'LACA ARG MOLINETE 1 IN', inDirectionFloor: '1st Floor', outDirectionFloor: 'Out of office' },
  { partition: 'AR.Cordoba', door: 'LACA ARG MOLINETE 2 IN', inDirectionFloor: '1st Floor', outDirectionFloor: 'Out of office' },
  { partition: 'AR.Cordoba', door: 'LACA ARG MOLINETE 3 IN', inDirectionFloor: '1st Floor', outDirectionFloor: 'Out of office' },
  { partition: 'AR.Cordoba', door: 'LACA ARG MOLINETE 4 IN', inDirectionFloor: '1st Floor', outDirectionFloor: 'Out of office' },
  { partition: 'AR.Cordoba', door: 'LACA ARG PORTON', inDirectionFloor: 'PORTON', outDirectionFloor: 'PORTON' },
  { partition: 'AR.Cordoba', door: 'LACA ARG BUZON', inDirectionFloor: ' BUZON', outDirectionFloor: ' BUZON' },
  { partition: 'AR.Cordoba', door: 'LACA ARG MOLINETE 1 OUT', inDirectionFloor: 'Out of office', outDirectionFloor: 'Out of office' },
  { partition: 'AR.Cordoba', door: 'LACA ARG MOLINETE 2 OUT', inDirectionFloor: 'Out of office', outDirectionFloor: 'Out of office' },
  { partition: 'AR.Cordoba', door: 'LACA ARG MOLINETE 3 OUT', inDirectionFloor: 'Out of office', outDirectionFloor: 'Out of office' },
  { partition: 'AR.Cordoba', door: 'LACA ARG MOLINETE 4 OUT', inDirectionFloor: 'Out of office', outDirectionFloor: 'Out of office' },






  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A1 Main Lobby Door', inDirectionFloor: 'Building A1', outDirectionFloor: 'Out of office ' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A1 IT Room Door', inDirectionFloor: 'Building A1', outDirectionFloor: 'Building A1' },



  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B1 Main Lobby Door', inDirectionFloor: ' Building B1', outDirectionFloor: 'Out of office ' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B1 Crystal Emergency #1 CAFETERIA', inDirectionFloor: ' Building B1', outDirectionFloor: ' Building B1' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B1 Crystal Emergency #4 SOUTH', inDirectionFloor: ' Building B1', outDirectionFloor: 'Out of office ' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B1 CRYSTAL EMERGENCY #3 SOUTH EAST', inDirectionFloor: ' Building B1', outDirectionFloor: 'Out of office ' },


  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A1 Emergency Crystal Door', inDirectionFloor: 'Building A1', outDirectionFloor: 'Out of office ' },

{ partition: 'CR.Costa Rica Partition', door: 'LACA CR Shower Men Door', inDirectionFloor: 'Men Shower', outDirectionFloor: 'Out of office' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR Shower Women Door', inDirectionFloor: ' Women Shower', outDirectionFloor: 'Out of office' },


  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B1 FITNESS Door', inDirectionFloor: 'Building B1', outDirectionFloor: 'Building B1' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A2 Floor Crystal Emergency Door', inDirectionFloor: 'Building A2', outDirectionFloor: 'Out of office ' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A2 Emergency Elevators Door', inDirectionFloor: 'Building A2', outDirectionFloor: 'Out of office ' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A2 IT Room Door', inDirectionFloor: 'Building A2', outDirectionFloor: 'Building A2' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A2 Main Lobby Door', inDirectionFloor: 'Building A2', outDirectionFloor: 'Out of office ' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A2 Lactation Room', inDirectionFloor: 'Building A2', outDirectionFloor: 'Building A2' },

  { partition: 'CR.Costa Rica Partition', door: 'Prueba', inDirectionFloor: 'Building A2', outDirectionFloor: 'Building A2' },

  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A2 PCI DOOR', inDirectionFloor: 'Building A2', outDirectionFloor: 'Building A2' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A3 Floor Crystal Emergency Door', inDirectionFloor: 'Building A3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A3 Emergency Elevator Door', inDirectionFloor: 'Building A3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A3 IT Room Door borrar', inDirectionFloor: 'Building A3', outDirectionFloor: 'Building A3' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A3 Main Lobby Door', inDirectionFloor: 'Building A3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR A3 Contract File Door', inDirectionFloor: 'Building A3', outDirectionFloor: 'Building A3' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B3 IT Room Door', inDirectionFloor: 'Building B3', outDirectionFloor: 'Building B3' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B3 Main Lobby Door', inDirectionFloor: 'Building B3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B3 3RD Floor Emergency Door', inDirectionFloor: 'Building B3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B3 3rd Floor Elevator Emergency Door', inDirectionFloor: 'Building B3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B2 Emergency Door', inDirectionFloor: 'Building B2', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B2 Emergency Elevators Door', inDirectionFloor: 'Building B2', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B2 Security Door', inDirectionFloor: 'Building B2', outDirectionFloor: 'Building B2' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR B2  Main Lobby Door', inDirectionFloor: 'Building B2', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E2 Main Lobby Door OLD', inDirectionFloor: 'Building E2', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E2 Emergency Elevators Door', inDirectionFloor: 'Building E2', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E3 Main Lobby OLD', inDirectionFloor: 'Building E3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E3 Emergency Elevators Door', inDirectionFloor: 'Building E3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E3 IT Room', inDirectionFloor: 'Building E3', outDirectionFloor: 'Building E3' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E2 Emergency Crystal Door', inDirectionFloor: 'Building E2', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E4  Emergency Exit Elevators', inDirectionFloor: 'Building E4', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E4 Emergency Crystal #21 Door', inDirectionFloor: 'Building E4', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E3 Emergency Crystal', inDirectionFloor: 'Building E3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E4 Main Lobby Door', inDirectionFloor: 'Building E4', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E4  GPS STORAGE', inDirectionFloor: 'Building E4', outDirectionFloor: 'Building E4' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E3 Main Lobby', inDirectionFloor: 'Building E3', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR E2 Main Lobby', inDirectionFloor: 'Building E2', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR F4 IT Room', inDirectionFloor: 'Building F4', outDirectionFloor: 'Building F4' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR F4 IT Lab Door', inDirectionFloor: 'Building F4', outDirectionFloor: 'Building F4' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR F4 Main Lobby Door', inDirectionFloor: 'Building F4', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR F4 Emergency Elevators', inDirectionFloor: 'Building F4', outDirectionFloor: 'Out of office ' },
  { partition: 'CR.Costa Rica Partition', door: 'LACA CR F4 Emergency Exit Crystal', inDirectionFloor: 'Building F4', outDirectionFloor: 'Out of office ' },
  





  { partition: 'MX.Mexico City', door: 'LACA_MX DOOR-01 EMERGENCY EXIT', inDirectionFloor: 'Floor 01', outDirectionFloor: 'Out of office ' },
  { partition: 'MX.Mexico City', door: 'LACA_MX DOOR-02 MAIN ENTRANCE DOOR', inDirectionFloor: 'Floor 01', outDirectionFloor: 'Out of office ' },
  { partition: 'MX.Mexico City', door: 'LACA_MX DOOR-03 FRONT DESK TO OFFICE', inDirectionFloor: 'Floor 01', outDirectionFloor: 'Out of office ' },
  { partition: 'MX.Mexico City', door: 'LACA_MX DOOR-04 ELECTRIC ROOM DOOR', inDirectionFloor: 'Floor 01', outDirectionFloor: 'Floor 01' },
  { partition: 'MX.Mexico City', door: 'LACA_MX DOOR-05 SITE(IDF)IT ROOM Restricted Door', inDirectionFloor: 'Floor 01', outDirectionFloor: 'Floor 01' },
  { partition: 'PA.Panama City', door: 'LACA PA Elevator', inDirectionFloor: 'Floor 01', outDirectionFloor: 'Out of office ' },
  { partition: 'PA.Panama City', door: 'LACA PA Reception', inDirectionFloor: 'Floor 01', outDirectionFloor: 'Out of office ' },
  { partition: 'PA.Panama City', door: 'LACA PA. Parking door', inDirectionFloor: 'Floor 01', outDirectionFloor: 'Out of office ' },
  { partition: 'PA.Panama City', door: 'LACA PA. IT Room', inDirectionFloor: 'Floor 01', outDirectionFloor: 'Floor 01' },
  { partition: 'PE.Lima', door: 'LACA PE 2nd Floor Main Entrance', inDirectionFloor: '2nd Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'PE.Lima', door: 'LACA PE IT Room', inDirectionFloor: '2nd Floor', outDirectionFloor: '2nd Floor' },
  { partition: 'PE.Lima', door: 'LACA PE 3rd Floor Main Entrance', inDirectionFloor: ' 3rd Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'PE.Lima', door: 'LACA PE Security', inDirectionFloor: ' 3rd Floor', outDirectionFloor: ' 3rd Floor' },
  { partition: 'PE.Lima', door: 'LACA PE 3rd Floor Terrace', inDirectionFloor: ' 3rd Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'PE.Lima', door: 'LACA PE 1st Floor Emergency', inDirectionFloor: '1st Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'PE.Lima', door: 'LACA  PE Generator Basement', inDirectionFloor: 'Basement', outDirectionFloor: 'Out of office ' },
  { partition: 'PE.Lima', door: 'LACA PE 3rd  Floor Emergency', inDirectionFloor: '3rd  Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'PE.Lima', door: 'LACA PE 2nd West Floor Emergency', inDirectionFloor: '2nd Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'PE.Lima', door: 'LACA PE 2nd Floor Storage Room', inDirectionFloor: '2nd Floor', outDirectionFloor: '2nd Floor' },
  { partition: 'BR.Sao Paulo', door: 'LACA BR 6TH IDF DOOR', inDirectionFloor: '6th Floor', outDirectionFloor: '6th Floor' },
  { partition: 'BR.Sao Paulo', door: 'LACA BR 6TH FLOOR MAIN ENTRANCE DOOR', inDirectionFloor: '6th Floor', outDirectionFloor: 'Out of office ' },
  { partition: 'BR.Sao Paulo', door: 'LACA BR 6TH FLOOR STORAGE DOOR', inDirectionFloor: '6th Floor', outDirectionFloor: '6th Floor' },
];






