# backup
Copy-Item package.json package.json.bak -Force
# remove "overrides" safely by parsing JSON
$json = Get-Content package.json -Raw | ConvertFrom-Json
if ($json.PSObject.Properties.Name -contains 'overrides') {
  $json.PSObject.Properties.Remove('overrides')
  $json | ConvertTo-Json -Depth 20 | Set-Content package.json
  Write-Host "Removed overrides from package.json (backup saved as package.json.bak)"
} else {
  Write-Host "No overrides found in package.json"
}




Remove-Item -Recurse -Force node_modules
Remove-Item -Force package-lock.json



npm install @mui/material@5.18.0 @mui/system@5.18.0 @mui/styled-engine@5.18.0 \
  @emotion/react@11.14.0 @emotion/styled@11.14.1 \
  @mui/x-date-pickers@^6 date-fns@2.30.0 --legacy-peer-deps











PS D:\DASHBOARD\global-page\frontend> npm install date-fns@2.30.0 --save --legacy-peer-deps
>>
npm error code EOVERRIDE
npm error Override for @mui/styled-engine@^5.18.0 conflicts with direct dependency
npm error A complete log of this run can be found in: C:\Users\S326131HQ\AppData\Local\npm-cache\_logs\2025-09-26T10_26_23_875Z-debug-0.log
PS D:\DASHBOARD\global-page\frontend> npm install --legacy-peer-deps
>> 
npm error code EOVERRIDE
npm error Override for @mui/styled-engine@^5.18.0 conflicts with direct dependency
npm error A complete log of this run can be found in: C:\Users\S326131HQ\AppData\Local\npm-cache\_logs\2025-09-26T10_26_43_055Z-debug-0.log
PS D:\DASHBOARD\global-page\frontend> npm ls date-fns @mui/x-date-pickers @mui/system @mui/styled-engine
>> 
npm error code EOVERRIDE
npm error Override for @mui/styled-engine@^5.18.0 conflicts with direct dependency
npm error A complete log of this run can be found in: C:\Users\S326131HQ\AppData\Local\npm-cache\_logs\2025-09-26T10_27_14_018Z-debug-0.log
PS D:\DASHBOARD\global-page\frontend>
PS D:\DASHBOARD\global-page\frontend>
PS D:\DASHBOARD\global-page\frontend> 
PS D:\DASHBOARD\global-page\frontend> 






// frontend/vite.config.js
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';

const BACKEND_PY_PORT = process.env.BACKEND_PORT || 8000;
const BACKEND_PY_HOST = `http://10.199.22.57:${BACKEND_PY_PORT}`; // Python (ccure)
const NODE_BACKEND = 'http://10.199.22.57:3009';                 // Node (headcount + other legacy endpoints)

export default defineConfig({
  plugins: [react()],
  publicDir: path.resolve(__dirname, '../public'),
  resolve: {
    alias: {
      // Keep @mui/material un-aliased (let package resolution work normally)
      // Force emotion and MUI styled engine to use the top-level copies to avoid duplicates:
      '@emotion/react': path.resolve(__dirname, 'node_modules/@emotion/react'),
      '@emotion/styled': path.resolve(__dirname, 'node_modules/@emotion/styled'),
      // This makes every `@mui/styled-engine` import resolve to whatever is installed at top-level
      '@mui/styled-engine': path.resolve(__dirname, 'node_modules/@mui/styled-engine'),
    },
    // Prevent duplicate copies of these libs being bundled
    dedupe: ['@mui/material', '@mui/system', '@mui/styled-engine', '@emotion/react', '@emotion/styled']
  },
  optimizeDeps: {
    // help vite pre-bundle these so ESM exports resolve correctly
    include: [
      '@mui/material',
      '@mui/material/styles',
      '@mui/icons-material',
      '@emotion/react',
      '@emotion/styled',
      '@mui/system',
      '@mui/styled-engine'
    ]
  },
  server: {
    port: 3005,
    hmr: { overlay: false },
    proxy: {
      '/api/ccure': {
        target: BACKEND_PY_HOST,
        changeOrigin: true,
        secure: false,
        rewrite: (path) => path.replace(/^\/api/, ''),
        timeout: 120000
      },
      '/api': {
        target: NODE_BACKEND,
        changeOrigin: true,
        secure: false,
        timeout: 120000
      }
    }
  }
});
