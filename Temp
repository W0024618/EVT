Check Details Logic Check each Logic carefully compare both commmented and uncommented file and fix all issue 
so We dont mix API endpint 
Use Previous Headcount API and Logic for HeadCount and add only average API and display AVerage and details 
only 

// frontend/src/api.js
import axios from 'axios';

const api = axios.create({
  baseURL: '/api',         // frontend calls '/api/...' and vite proxy rewrites it
  timeout: 120000,
  headers: {
    'Accept': 'application/json',
  }
});

api.interceptors.response.use(
  (r) => r,
  (err) => {
    // friendly log for dev
    console.error('[API ERROR]', err?.config?.method?.toUpperCase(), err?.config?.url, err?.response?.status, err?.message);
    return Promise.reject(err);
  }
);

export default api;





//C:\Users\W0024618\Desktop\global-page\frontend\src\App.jsx

import React from 'react';
import { Routes, Route, Navigate, Link } from 'react-router-dom';
import { Box, AppBar, Toolbar, Button } from '@mui/material';

import GlobalPage   from './pages/GlobalPage.jsx';
import VipPage      from './pages/VipPage.jsx';
import ReportsPage  from './pages/ReportsPage.jsx';

export default function App() {
  return (
    <>
      <Routes>
        <Route path="/"      element={<GlobalPage />} />
        <Route path="/vip"   element={<VipPage />} />
        <Route path="/reports" element={<ReportsPage />} />
        <Route path="*"      element={<Navigate to="/" replace />} />
      </Routes>
    </>
  );
}



// //C:\Users\W0024618\Desktop\global-page\frontend\src\main.jsx
import React from 'react';
import ReactDOM from 'react-dom/client';

// ✅ CssBaseline from @mui/material
import { CssBaseline } from '@mui/material';
// ✅ ThemeProvider from @mui/material/styles
import { ThemeProvider } from '@mui/material/styles';

import { createBrowserRouter, RouterProvider } from 'react-router-dom';
import App from './App.jsx';
import theme from './theme.js';  // our fixed theme.js

const router = createBrowserRouter(
  [{ path: '/*', element: <App /> }],
  {
    future: {
      v7_startTransition: true,
      v7_relativeSplatPath: true,
    },
  }
);

ReactDOM
  .createRoot(document.getElementById('root'))
  .render(
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <RouterProvider router={router} />
    </ThemeProvider>
  );








// // frontend/vite.config.js
// import { defineConfig } from 'vite';
// import react from '@vitejs/plugin-react';
// import path from 'path';

// export default defineConfig({
//   plugins: [react()],
//   // Points Vite at your shared /public folder
//   publicDir: path.resolve(__dirname, '../public'),
//   server: {
//     port: 5173,
//     // Serve index.html for all non-asset routes (SPA fallback)
//     historyApiFallback: true,
//     // Disable the HMR error overlay so you don't get that popup
//     hmr: {
//       overlay: false
//     },
//     proxy: {
//       // All API calls under /api will be forwarded to your backend
//       '/api': {
//         target: 'http://localhost:3008',
//         changeOrigin: true,
//         secure: false,
//       }
//     }
//   }
// });








//
// frontend/vite.config.js
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';

const BACKEND_PORT = process.env.BACKEND_PORT || 8000;
const BACKEND_HOST = `http://localhost:${BACKEND_PORT}`;

export default defineConfig({
  plugins: [react()],
  publicDir: path.resolve(__dirname, '../public'),
  resolve: {
    alias: {
      // Keep single copies of MUI/emotion to avoid runtime errors such as
      // "createTheme_default is not a function" caused by duplicate copies.
      '@mui/material': path.resolve(__dirname, 'node_modules/@mui/material'),
      '@emotion/react': path.resolve(__dirname, 'node_modules/@emotion/react'),
      '@emotion/styled': path.resolve(__dirname, 'node_modules/@emotion/styled'),
    }
  },
  server: {
    port: 5173,
    hmr: { overlay: false },
    proxy: {
      // Proxy '/api/*' to backend, removing the '/api' prefix
      '/api': {
        target: BACKEND_HOST,
        changeOrigin: true,
        secure: false,
        rewrite: (p) => p.replace(/^\/api/, ''),
        timeout: 120000
      }
    }
  }
});







