// backend/services/reportService.js
export async function dailyAccessReportEMEA({ from, to, employees = '' }) {
  const pool = await getPool('emea');
  const req  = pool.request();

  req.input('fromDate', sql.Date, from);
  req.input('toDate',   sql.Date, to);
  const employeesParam = (employees && String(employees).trim()) ? String(employees).trim() : null;
  req.input('employees', sql.NVarChar(sql.MAX), employeesParam);

  const query = `
DECLARE @empCSV NVARCHAR(MAX) = @employees;

;WITH EmpList AS (
  SELECT LTRIM(RTRIM(value)) AS emp
  FROM STRING_SPLIT(ISNULL(@empCSV,''), ',')
  WHERE LTRIM(RTRIM(value)) <> ''
),

SwipeData AS (
  SELECT
    t1.ObjectName1,
    t1.ObjectName2,
    t1.Messagetype,
    t2.Text12       AS EmployeeID,
    t3.Name         AS PersonnelType,
    t1.PartitionName2 AS location,

    -- compute a single "local wall-clock" datetime and use it consistently
    DATEADD(MINUTE, -1 * t1.[MessageLocaleOffset], t1.[MessageUTC]) AS LocaleMessageTime,

    CASE
      WHEN t5_dir.Value = 'InDirection'  THEN 'IN'
      WHEN t5_dir.Value = 'OutDirection' THEN 'OUT'
      ELSE 'Unknown'
    END AS Swipe,

    t5_card.Value AS CardNumber,
    CAST(t2.Int1 AS NVARCHAR(50)) AS NumericEmployeeID
  FROM ACVSUJournal_00011028.dbo.ACVSUJournalLog AS t1
  INNER JOIN ACVSCore.Access.Personnel     AS t2
    ON t1.ObjectIdentity1 = t2.GUID
  INNER JOIN ACVSCore.Access.PersonnelType AS t3
    ON t2.PersonnelTypeId = t3.ObjectID
  LEFT JOIN ACVSUJournal_00011028.dbo.ACVSUJournalLogxmlShred AS t5_dir
    ON t1.XmlGUID = t5_dir.GUID
    AND t5_dir.Value IN ('InDirection','OutDirection')
  LEFT JOIN ACVSUJournal_00011028.dbo.ACVSUJournalLogxmlShred AS t5_card
    ON t1.XmlGUID = t5_card.GUID
    AND t5_card.Value NOT IN ('InDirection','OutDirection')
    AND t5_card.Value NOT LIKE '%[^0-9]%'
    AND t5_card.Value IS NOT NULL
    AND LTRIM(RTRIM(t5_card.Value)) <> ''
  WHERE
    /* local‐time window:
         >= 08:00 on fromDate
         AND <  08:00 on the day after toDate */

    -- IMPORTANT: use the SAME expression (with -1 * MessageLocaleOffset) here as above
    DATEADD(HOUR, 8, CAST(@fromDate AS DATETIME))
      <= DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)
    AND DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)
      < DATEADD(
          HOUR,
          8,
          DATEADD(DAY, 1, CAST(@toDate AS DATETIME))
        )

    /* EMPLOYEE FILTER */
    AND (
      @empCSV IS NULL
      OR LTRIM(RTRIM(@empCSV)) = ''
      OR EXISTS (
        SELECT 1 FROM EmpList e
        WHERE e.emp = t1.ObjectName1
           OR e.emp = t2.Text12
           OR e.emp = CAST(t2.Int1 AS NVARCHAR(50))
      )
    )
)
SELECT
  ObjectName1,
  ObjectName2,
  Messagetype,
  PersonnelType,
  EmployeeID,
  location,
  Swipe,
  CardNumber,
  LocaleMessageTime
FROM SwipeData
ORDER BY LocaleMessageTime;
`;

  const { recordset } = await req.query(query);
  return recordset;
}















// updated dailyAccessReportEMEA in backend/services/reportService.js
export async function dailyAccessReportEMEA({ from, to, employees = '' }) {
  const pool = await getPool('emea');
  const req  = pool.request();

  req.input('fromDate', sql.Date, from);
  req.input('toDate',   sql.Date, to);
  const employeesParam = (employees && String(employees).trim()) ? String(employees).trim() : null;
  req.input('employees', sql.NVarChar(sql.MAX), employeesParam);

  const query = `
DECLARE @empCSV NVARCHAR(MAX) = @employees;

;WITH EmpList AS (
  SELECT LTRIM(RTRIM(value)) AS emp
  FROM STRING_SPLIT(ISNULL(@empCSV,''), ',')
  WHERE LTRIM(RTRIM(value)) <> ''
),

SwipeData AS (
  SELECT
    t1.ObjectName1,
    t1.ObjectName2,
    t1.Messagetype,
    t2.Text12       AS EmployeeID,
    t3.Name         AS PersonnelType,
    t1.PartitionName2 AS location,

    -- compute local wall-clock timestamp (consistent sign)
    CONVERT(VARCHAR(23),
      DATEADD(MINUTE, t1.MessageLocaleOffset, t1.MessageUTC),
      121
    ) AS LocaleMessageTime,

    -- choose a single direction value (if present)
    CASE WHEN dirX.dirVal = 'InDirection'  THEN 'IN'
         WHEN dirX.dirVal = 'OutDirection' THEN 'OUT'
         ELSE 'Unknown'
    END AS Swipe,

    -- single card value (if present)
    cardX.cardVal AS CardNumber,

    CAST(t2.Int1 AS NVARCHAR(50)) AS NumericEmployeeID

  FROM ACVSUJournal_00011028.dbo.ACVSUJournalLog AS t1
  INNER JOIN ACVSCore.Access.Personnel     AS t2
    ON t1.ObjectIdentity1 = t2.GUID
  INNER JOIN ACVSCore.Access.PersonnelType AS t3
    ON t2.PersonnelTypeId = t3.ObjectID

  -- OUTER APPLY to extract a single Card/CHUID value (prevents duplicate rows from multiple shred entries)
  OUTER APPLY (
    SELECT TOP (1) s.[value] AS cardVal
    FROM ACVSUJournal_00011028.dbo.ACVSUJournalLogxmlShred AS s
    WHERE s.GUID = t1.XmlGUID
      AND s.[Name] IN ('Card','CHUID')
      AND s.[value] IS NOT NULL
      AND LTRIM(RTRIM(s.[value])) <> ''
    ORDER BY (CASE WHEN s.[Name] = 'Card' THEN 0 ELSE 1 END) -- prefer 'Card' if both exist
  ) AS cardX

  -- OUTER APPLY to extract direction (InDirection / OutDirection) if present
  OUTER APPLY (
    SELECT TOP (1) v.[value] AS dirVal
    FROM ACVSUJournal_00011028.dbo.ACVSUJournalLogxmlShred AS v
    WHERE v.GUID = t1.XmlGUID
      AND v.[value] IN ('InDirection','OutDirection')
  ) AS dirX

  WHERE
    /* local‐time window:
         >= 08:00 on fromDate
         AND <  08:00 on the day after toDate
       (NOTE: using the same DATEADD(...) expression here as used in LocaleMessageTime)
    */
    DATEADD(HOUR, 8, CAST(@fromDate AS DATETIME))
      <= DATEADD(MINUTE, t1.MessageLocaleOffset, t1.MessageUTC)
    AND DATEADD(MINUTE, t1.MessageLocaleOffset, t1.MessageUTC)
      < DATEADD(HOUR, 8, DATEADD(DAY, 1, CAST(@toDate AS DATETIME)))

    /* EMPLOYEE FILTER:
       - If @empCSV is NULL/empty => no filter
       - Else match if any emp value equals ObjectName1 OR Text12 OR Int1 (as string)
    */
    AND (
      @empCSV IS NULL
      OR LTRIM(RTRIM(@empCSV)) = ''
      OR EXISTS (
        SELECT 1 FROM EmpList e
        WHERE e.emp = t1.ObjectName1
           OR e.emp = t2.Text12
           OR e.emp = CAST(t2.Int1 AS NVARCHAR(50))
      )
    )
)
SELECT
  ObjectName1,
  ObjectName2,
  Messagetype,
  PersonnelType,
  EmployeeID,
  location,
  Swipe,
  CardNumber,
  LocaleMessageTime
FROM SwipeData
ORDER BY LocaleMessageTime;
`;

  const { recordset } = await req.query(query);
  return recordset;
}















When i Update below Query we got Time Correct but we got some extra count here which is need to fix...



//C:\Users\W0024618\Desktop\global-page\backend\services\reportService.js

// updated dailyAccessReportEMEA in backend/services/reportService.js
export async function dailyAccessReportEMEA({ from, to, employees = '' }) {
  const pool = await getPool('emea');
  const req  = pool.request();

  req.input('fromDate', sql.Date, from);
  req.input('toDate',   sql.Date, to);
  // accept comma separated list of names or IDs (nullable / empty allowed)
  const employeesParam = (employees && String(employees).trim()) ? String(employees).trim() : null;
  req.input('employees', sql.NVarChar(sql.MAX), employeesParam);

  const query = `
-- employees CSV is passed in @employees (e.g. 'Vainilaitis, Valdas,32345')
-- If @employees is NULL or empty -> no employee filter applied.
DECLARE @empCSV NVARCHAR(MAX) = @employees;

;WITH EmpList AS (
  SELECT LTRIM(RTRIM(value)) AS emp
  FROM STRING_SPLIT(ISNULL(@empCSV,''), ',')
  WHERE LTRIM(RTRIM(value)) <> ''
),

SwipeData AS (
  SELECT
    t1.ObjectName1,
    t1.ObjectName2,
    t1.Messagetype,
    t2.Text12       AS EmployeeID,       -- contractor id stored here for contractors
    t3.Name         AS PersonnelType,
    t1.PartitionName2 AS location,

DATEADD(MINUTE, -1 * t1.[MessageLocaleOffset], t1.[MessageUTC]) AS LocaleMessageTime,---------------------i have update here 

    CASE
      WHEN t5_dir.Value = 'InDirection'  THEN 'IN'
      WHEN t5_dir.Value = 'OutDirection' THEN 'OUT'
      ELSE 'Unknown'
    END AS Swipe,

    t5_card.Value AS CardNumber,
    -- numeric employee id
    CAST(t2.Int1 AS NVARCHAR(50)) AS NumericEmployeeID
  FROM ACVSUJournal_00011028.dbo.ACVSUJournalLog AS t1
  INNER JOIN ACVSCore.Access.Personnel     AS t2
    ON t1.ObjectIdentity1 = t2.GUID
  INNER JOIN ACVSCore.Access.PersonnelType AS t3
    ON t2.PersonnelTypeId = t3.ObjectID
  LEFT JOIN ACVSUJournal_00011028.dbo.ACVSUJournalLogxmlShred AS t5_dir
    ON t1.XmlGUID = t5_dir.GUID
    AND t5_dir.Value IN ('InDirection','OutDirection')
  LEFT JOIN ACVSUJournal_00011028.dbo.ACVSUJournalLogxmlShred AS t5_card
    ON t1.XmlGUID = t5_card.GUID
    AND t5_card.Value NOT IN ('InDirection','OutDirection')
    AND t5_card.Value NOT LIKE '%[^0-9]%'
    AND t5_card.Value IS NOT NULL
    AND LTRIM(RTRIM(t5_card.Value)) <> ''
  WHERE
    /* local‐time window:
         >= 08:00 on fromDate
         AND <  08:00 on the day after toDate */
    DATEADD(HOUR, 8, CAST(@fromDate AS DATETIME))
      <= DATEADD(MINUTE, t1.MessageLocaleOffset, t1.MessageUTC)
    AND DATEADD(MINUTE, t1.MessageLocaleOffset, t1.MessageUTC)
      < DATEADD(
          HOUR,
          8,
          DATEADD(DAY, 1, CAST(@toDate AS DATETIME))
        )

    /* EMPLOYEE FILTER:
       - If @empCSV is NULL/empty => no filter
       - Else match if any emp value equals ObjectName1 OR Text12 OR Int1 (as string)
    */
    AND (
      @empCSV IS NULL
      OR LTRIM(RTRIM(@empCSV)) = ''
      OR EXISTS (
        SELECT 1 FROM EmpList e
        WHERE e.emp = t1.ObjectName1
           OR e.emp = t2.Text12
           OR e.emp = CAST(t2.Int1 AS NVARCHAR(50))
      )
    )
)
SELECT
  ObjectName1,
  ObjectName2,
  Messagetype,
  PersonnelType,
  EmployeeID,
  location,
  Swipe,
  CardNumber,
  LocaleMessageTime
FROM SwipeData
ORDER BY LocaleMessageTime;
`;

  const { recordset } = await req.query(query);
  return recordset;
}




now as per above Query we got 

Date	Time	Name	Contractor ID
24-Sep-25	3:23:46 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	3:24:41 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	3:30:10 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	3:30:29 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	3:56:08 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	4:02:31 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	4:24:48 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	4:55:41 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	5:26:15 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	5:26:35 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	5:27:22 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	5:37:44 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	6:18:13 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	6:21:54 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	6:45:55 PM	JANCUKOVIC, VACLAVA	75179842
25-Sep-25	3:21:07 PM	JANCUKOVIC, VACLAVA	75179842
25-Sep-25	3:21:49 PM	JANCUKOVIC, VACLAVA	75179842
25-Sep-25	3:29:46 PM	JANCUKOVIC, VACLAVA	75179842
25-Sep-25	3:30:07 PM	JANCUKOVIC, VACLAVA	75179842
25-Sep-25	3:53:30 PM	JANCUKOVIC, VACLAVA	75179842
25-Sep-25	3:57:18 PM	JANCUKOVIC, VACLAVA	75179842



so as per logic necessary is 



Date	Time	Name	Contractor ID
24-Sep-25	3:23:46 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	3:24:41 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	3:30:10 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	3:30:29 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	3:56:08 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	4:02:31 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	4:24:48 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	4:55:41 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	5:26:15 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	5:26:35 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	5:27:22 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	5:37:44 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	6:18:13 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	6:21:54 PM	JANCUKOVIC, VACLAVA	75179842
24-Sep-25	6:45:55 PM	JANCUKOVIC, VACLAVA	75179842


expected is this we got some extra count need to fix tgis 
